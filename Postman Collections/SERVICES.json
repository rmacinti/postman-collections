{
  "info": {
    "_postman_id": "d6b62ab7-d3ac-4541-bca7-9563a41b2d6c",
    "name": "SERVICES",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "bb22a5b2-a93f-4611-8fb3-ac576462484e",
      "name": "eols-features-service",
      "description": null,
      "item": [
        {
          "_postman_id": "9c61ba09-0cae-4a3b-b553-058497e50f40",
          "name": "getTokenByAdminLogin",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "c6404c1e-85da-43ef-a558-c74e8c963bbe",
                "type": "text/javascript",
                "exec": [
                  "console.log(request.name);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "e91caf24-b593-4eb9-8710-40171e039ed0",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if(responseCode.code === 200){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"token\",jsonData.token);",
                  "    console.log(\"Request Name: \" + request.name);",
                  "    console.log(\"Response time in ms: \" + responseTime);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"username\": \"eolsadmin\",\r\n   \"password\": \"testing1\"\r\n}"
            },
            "url": "{{url}}/login-service/login"
          },
          "response": [
            {
              "id": "4fa2f624-7bd3-475d-a5f9-c99b3590810b",
              "name": "token",
              "originalRequest": {
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "description": "",
                  "key": "Access-Control-Allow-Credentials",
                  "name": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "description": "",
                  "key": "Access-Control-Allow-Origin",
                  "name": "Access-Control-Allow-Origin",
                  "value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop"
                },
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "keep-alive"
                },
                {
                  "description": "",
                  "key": "Content-Length",
                  "name": "Content-Length",
                  "value": "645"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json;charset=UTF-8"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Fri, 21 Apr 2017 15:29:10 GMT"
                },
                {
                  "description": "",
                  "key": "Server",
                  "name": "Server",
                  "value": "nginx/1.10.3"
                },
                {
                  "description": "",
                  "key": "X-Application-Context",
                  "name": "X-Application-Context",
                  "value": "eols-api-gateway-server:qa:8080"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\"token\":\"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJlb2xzYWRtaW4iLCJ1c2VyIjp7InVzZXJJZCI6bnVsbCwiZXh0ZXJuYWxJZCI6bnVsbCwidXNlcm5hbWUiOiJlb2xzYWRtaW4iLCJmaXJzdE5hbWUiOm51bGwsImxhc3ROYW1lIjpudWxsLCJyb2xlIjoiQWRtIiwiZXhwaXJlRGF0ZSI6MTQ5Mjc5MjE1MDc4Niwic2Vzc2lvbklkIjoiNmJlZTdkZGQtYmFlOC00MDJhLWExMWUtMDRlNWViM2NhNzVjIiwiZW1haWxBZGRyZXNzIjpudWxsLCJyb2xlcyI6W10sImFwcFBhcmFtcyI6e319LCJpc3MiOiJlb2xzIiwianRpIjoiNzA2ODU3NzQtYjcxNi00YTM0LWIxMDctZWZjZmNkMWRkMTZmIiwiaWF0IjoxNDkyNzg4NTUwLCJuYmYiOjE0OTI3ODg1NTAsImV4cCI6MTQ5Mjc5MjE1MH0.7-BAIMlP8WCid3uGA9RS_oTpX4MEDnPxREvqMjn6FtFtgyGblBjIM-3_itqrC5V582mADWTnDw6mWS1EwMGzPA\",\"expireDate\":1492792150786,\"cookies\":null}"
            }
          ]
        },
        {
          "_postman_id": "4a060823-0172-4679-b39a-7ef9d5705bd9",
          "name": "postFeature",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "84f0f070-b5c2-441a-b6f1-f3e45bdeb300",
                "type": "text/javascript",
                "exec": [
                  "console.log(request.name);",
                  "var randomNumber = Math.floor(Math.random()*9999999);",
                  "postman.setEnvironmentVariable(\"appname\", \"FEATURE_APP\");",
                  "postman.setEnvironmentVariable(\"keyname\", \"FEATURE_KEY\");"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "dbc8c616-57b7-4366-89b4-b31b00dc8db1",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Response time is less than 5s\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(5000);",
                  "});",
                  "",
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "false"
            },
            "url": "{{url}}/api/features/app/{{appname}}/key/{{keyname}}"
          },
          "response": []
        },
        {
          "_postman_id": "340b34d1-4e1c-4378-9996-ebbb69d70c11",
          "name": "getFeature",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "33a7d765-6f9c-4f0b-a02b-03a1e8a7b0ba",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Response time is less than 5s\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(5000);",
                  "});",
                  "",
                  "if(responseCode.code === 200) {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    tests[\"feature value is false\"] = jsonData.featureValue === \"false\";",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{url}}/api/features/app/{{appname}}/key/{{keyname}}"
          },
          "response": []
        },
        {
          "_postman_id": "f1c63662-74aa-4f72-b39e-75fe49b7b8de",
          "name": "putFeature",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8d984062-8857-48fb-bcb9-718897d9e9b9",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Response time is less than 5s\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(5000);",
                  "});",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "true"
            },
            "url": "{{url}}/api/features/app/{{appname}}/key/{{keyname}}"
          },
          "response": []
        },
        {
          "_postman_id": "b059e3c5-aab2-45f2-81a2-50bf43712b0e",
          "name": "getUpdatedFeature",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "43556588-5292-42ac-b6aa-ad3444a2edf3",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Response time is less than 1s\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                  "});",
                  "",
                  "if(responseCode.code === 200) {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    tests[\"feature value is true\"] = jsonData.featureValue === \"true\";",
                  "} "
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{url}}/api/features/app/{{appname}}/key/{{keyname}}"
          },
          "response": []
        },
        {
          "_postman_id": "f1861072-8a81-4176-90eb-fed1909630e5",
          "name": "deleteFeature",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8c1089a5-abea-4078-bc67-b0e6458d711b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 204\", function () {",
                  "    pm.response.to.have.status(204);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{url}}/api/features/app/{{appname}}/key/{{keyname}}"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "b3b49694-7fc0-4ac3-92c0-f8955e2b3075",
      "name": "eols-book_xml_service",
      "description": null,
      "item": [
        {
          "_postman_id": "56cbb70e-bec6-4892-8522-fa21889a5e3f",
          "name": "getTokenByAdminLogin",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "c6404c1e-85da-43ef-a558-c74e8c963bbe",
                "type": "text/javascript",
                "exec": [
                  "console.log(request.name);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "e91caf24-b593-4eb9-8710-40171e039ed0",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if(responseCode.code === 200){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"token\",jsonData.token);",
                  "    console.log(\"Request Name: \" + request.name);",
                  "    console.log(\"Response time in ms: \" + responseTime);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"username\": \"eolsadmin\",\r\n   \"password\": \"testing1\"\r\n}"
            },
            "url": "{{url}}/login-service/login"
          },
          "response": [
            {
              "id": "befd9c3c-1fb0-4a6b-8413-0c340819fe2c",
              "name": "token",
              "originalRequest": {
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "description": "",
                  "key": "Access-Control-Allow-Credentials",
                  "name": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "description": "",
                  "key": "Access-Control-Allow-Origin",
                  "name": "Access-Control-Allow-Origin",
                  "value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop"
                },
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "keep-alive"
                },
                {
                  "description": "",
                  "key": "Content-Length",
                  "name": "Content-Length",
                  "value": "645"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json;charset=UTF-8"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Fri, 21 Apr 2017 15:29:10 GMT"
                },
                {
                  "description": "",
                  "key": "Server",
                  "name": "Server",
                  "value": "nginx/1.10.3"
                },
                {
                  "description": "",
                  "key": "X-Application-Context",
                  "name": "X-Application-Context",
                  "value": "eols-api-gateway-server:qa:8080"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\"token\":\"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJlb2xzYWRtaW4iLCJ1c2VyIjp7InVzZXJJZCI6bnVsbCwiZXh0ZXJuYWxJZCI6bnVsbCwidXNlcm5hbWUiOiJlb2xzYWRtaW4iLCJmaXJzdE5hbWUiOm51bGwsImxhc3ROYW1lIjpudWxsLCJyb2xlIjoiQWRtIiwiZXhwaXJlRGF0ZSI6MTQ5Mjc5MjE1MDc4Niwic2Vzc2lvbklkIjoiNmJlZTdkZGQtYmFlOC00MDJhLWExMWUtMDRlNWViM2NhNzVjIiwiZW1haWxBZGRyZXNzIjpudWxsLCJyb2xlcyI6W10sImFwcFBhcmFtcyI6e319LCJpc3MiOiJlb2xzIiwianRpIjoiNzA2ODU3NzQtYjcxNi00YTM0LWIxMDctZWZjZmNkMWRkMTZmIiwiaWF0IjoxNDkyNzg4NTUwLCJuYmYiOjE0OTI3ODg1NTAsImV4cCI6MTQ5Mjc5MjE1MH0.7-BAIMlP8WCid3uGA9RS_oTpX4MEDnPxREvqMjn6FtFtgyGblBjIM-3_itqrC5V582mADWTnDw6mWS1EwMGzPA\",\"expireDate\":1492792150786,\"cookies\":null}"
            }
          ]
        },
        {
          "_postman_id": "e9126e9a-957c-4740-8cea-349e0d300cb9",
          "name": "book_xml_server",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0969f36e-5c0c-4cb5-9860-129df6bda482",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Response time is less than 300ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(300);",
                  "});",
                  "",
                  "pm.test(\"Status code is 204\", function () {",
                  "    pm.response.to.have.status(204);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{url}}/bookxmlir/book/clearCache"
          },
          "response": []
        }
      ],
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "a975ae17-5021-42e5-a412-675e85d2c7b9",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "6a024641-4cdb-4c66-a283-1225e661105d",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "_postman_id": "6fdf03bc-01c1-4f6b-8b7a-e2fc19b587a8",
      "name": "eols-canvas-integration",
      "description": null,
      "item": [
        {
          "_postman_id": "9d6c0774-a2ff-4392-ac4c-a6de97c8e112",
          "name": "getTokenByAdminLogin",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5345fdbe-43d6-48c0-8dd0-5dbe3067ef47",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if(responseCode.code === 200){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"token\",jsonData.token);",
                  "    console.log(\"Request Name: \" + request.name);",
                  "    console.log(\"Response time in ms: \" + responseTime);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"username\": \"eolsadmin\",\r\n   \"password\": \"testing1\"\r\n}"
            },
            "url": "{{url}}/login-service/login"
          },
          "response": [
            {
              "id": "82ad6fef-f9f4-4629-a5fd-f379481e511f",
              "name": "token",
              "originalRequest": {
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "description": "",
                  "key": "Access-Control-Allow-Credentials",
                  "name": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "description": "",
                  "key": "Access-Control-Allow-Origin",
                  "name": "Access-Control-Allow-Origin",
                  "value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop"
                },
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "keep-alive"
                },
                {
                  "description": "",
                  "key": "Content-Length",
                  "name": "Content-Length",
                  "value": "645"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json;charset=UTF-8"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Fri, 21 Apr 2017 15:29:10 GMT"
                },
                {
                  "description": "",
                  "key": "Server",
                  "name": "Server",
                  "value": "nginx/1.10.3"
                },
                {
                  "description": "",
                  "key": "X-Application-Context",
                  "name": "X-Application-Context",
                  "value": "eols-api-gateway-server:qa:8080"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\"token\":\"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJlb2xzYWRtaW4iLCJ1c2VyIjp7InVzZXJJZCI6bnVsbCwiZXh0ZXJuYWxJZCI6bnVsbCwidXNlcm5hbWUiOiJlb2xzYWRtaW4iLCJmaXJzdE5hbWUiOm51bGwsImxhc3ROYW1lIjpudWxsLCJyb2xlIjoiQWRtIiwiZXhwaXJlRGF0ZSI6MTQ5Mjc5MjE1MDc4Niwic2Vzc2lvbklkIjoiNmJlZTdkZGQtYmFlOC00MDJhLWExMWUtMDRlNWViM2NhNzVjIiwiZW1haWxBZGRyZXNzIjpudWxsLCJyb2xlcyI6W10sImFwcFBhcmFtcyI6e319LCJpc3MiOiJlb2xzIiwianRpIjoiNzA2ODU3NzQtYjcxNi00YTM0LWIxMDctZWZjZmNkMWRkMTZmIiwiaWF0IjoxNDkyNzg4NTUwLCJuYmYiOjE0OTI3ODg1NTAsImV4cCI6MTQ5Mjc5MjE1MH0.7-BAIMlP8WCid3uGA9RS_oTpX4MEDnPxREvqMjn6FtFtgyGblBjIM-3_itqrC5V582mADWTnDw6mWS1EwMGzPA\",\"expireDate\":1492792150786,\"cookies\":null}"
            }
          ]
        },
        {
          "_postman_id": "9f802178-cc3c-4f15-90b5-dea38d69c150",
          "name": "createEvolveStudentUser",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b0450a1d-adcb-4d1b-a479-5a4dc7bfdee0",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 201\"] = responseCode.code === 201;",
                  " if(responseCode.code === 201){",
                  "     var jsonData = JSON.parse(responseBody);",
                  "     postman.setEnvironmentVariable(\"userId\",jsonData.userId);",
                  "     postman.setEnvironmentVariable(\"userName\",jsonData.userName);",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "0c73daf1-fb89-4460-a683-314c81321173",
                "type": "text/javascript",
                "exec": [
                  "var chars = 'abcdefghijklmnopqrstuvwxyz1234567890';",
                  "var string = '';",
                  "for(var ii=0; ii<15; ii++){",
                  "    string += chars[Math.floor(Math.random() * chars.length)];",
                  "}",
                  "",
                  "var randomStudentEmail = \"student.\"+string.trim()+ \"@mailinator.com\";",
                  "postman.setEnvironmentVariable(\"studentEmail1\",randomStudentEmail);"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json, text/plain, */*"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json;charset=UTF-8"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\":\"Student\",\n  \"lastName\":\"Mr\",\n  \"email\":\"{{studentEmail1}}\",\n  \"password\":\"{{password}}\",\n  \"roles\":[\"student_registered\"],\n  \"optInMarketing\":false,\n  \"isUserDomestic\":true\n}"
            },
            "url": {
              "raw": "{{url}}/api/evolveUser?role=student_registered&isFullUser=true",
              "host": [
                "{{url}}"
              ],
              "path": [
                "api",
                "evolveUser"
              ],
              "query": [
                {
                  "key": "role",
                  "value": "student_registered"
                },
                {
                  "key": "isFullUser",
                  "value": "true"
                }
              ]
            },
            "description": "genarating data:\nstudentUserName1\nstudentEmail1\nstudentUserId1"
          },
          "response": []
        },
        {
          "_postman_id": "34b6c06f-b226-4860-a23a-92d93769bfe4",
          "name": "getUserLoginsInfo",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3e7cbebd-a0ee-4b9c-ad93-e3b2ceaad05e",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 401\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"action\": \"NEXT\",\n\t\"currentContentId\": \" \",\n\t\"payload\": {},\n\t\"sequenceChunk\": \" \",\n\t\"userId\": {{userId}}\n}"
            },
            "url": "{{url}}/api/canvas/users/{{userId}}/logins"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "c7e93e1f-2e47-4cd9-9d6f-9171baaa791d",
      "name": "eols-assessment-service",
      "description": null,
      "item": [
        {
          "_postman_id": "886ad354-c0c9-4a26-bef3-e083fd8c68c3",
          "name": "getTokenByAdminLogin",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8ab4731d-ada2-474b-b60a-426849c48cd7",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if(responseCode.code === 200){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"token\",jsonData.token);",
                  "    console.log(\"Request Name: \" + request.name);",
                  "    console.log(\"Response time in ms: \" + responseTime);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"username\": \"eolsadmin\",\r\n   \"password\": \"testing1\"\r\n}"
            },
            "url": "{{url}}/login-service/login"
          },
          "response": [
            {
              "id": "80a961d3-9e46-4025-a2a6-b676a4981e1f",
              "name": "token",
              "originalRequest": {
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "description": "",
                  "key": "Access-Control-Allow-Credentials",
                  "name": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "description": "",
                  "key": "Access-Control-Allow-Origin",
                  "name": "Access-Control-Allow-Origin",
                  "value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop"
                },
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "keep-alive"
                },
                {
                  "description": "",
                  "key": "Content-Length",
                  "name": "Content-Length",
                  "value": "645"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json;charset=UTF-8"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Fri, 21 Apr 2017 15:29:10 GMT"
                },
                {
                  "description": "",
                  "key": "Server",
                  "name": "Server",
                  "value": "nginx/1.10.3"
                },
                {
                  "description": "",
                  "key": "X-Application-Context",
                  "name": "X-Application-Context",
                  "value": "eols-api-gateway-server:qa:8080"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\"token\":\"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJlb2xzYWRtaW4iLCJ1c2VyIjp7InVzZXJJZCI6bnVsbCwiZXh0ZXJuYWxJZCI6bnVsbCwidXNlcm5hbWUiOiJlb2xzYWRtaW4iLCJmaXJzdE5hbWUiOm51bGwsImxhc3ROYW1lIjpudWxsLCJyb2xlIjoiQWRtIiwiZXhwaXJlRGF0ZSI6MTQ5Mjc5MjE1MDc4Niwic2Vzc2lvbklkIjoiNmJlZTdkZGQtYmFlOC00MDJhLWExMWUtMDRlNWViM2NhNzVjIiwiZW1haWxBZGRyZXNzIjpudWxsLCJyb2xlcyI6W10sImFwcFBhcmFtcyI6e319LCJpc3MiOiJlb2xzIiwianRpIjoiNzA2ODU3NzQtYjcxNi00YTM0LWIxMDctZWZjZmNkMWRkMTZmIiwiaWF0IjoxNDkyNzg4NTUwLCJuYmYiOjE0OTI3ODg1NTAsImV4cCI6MTQ5Mjc5MjE1MH0.7-BAIMlP8WCid3uGA9RS_oTpX4MEDnPxREvqMjn6FtFtgyGblBjIM-3_itqrC5V582mADWTnDw6mWS1EwMGzPA\",\"expireDate\":1492792150786,\"cookies\":null}"
            }
          ]
        },
        {
          "_postman_id": "c73029d3-d3fe-4f17-a576-03d4002a0638",
          "name": "getAssessmentByAssignmentOfCurrentUser",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7e6b2bd0-3613-4dfb-8ec7-7d8b28208245",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "(pm.response.code===200 ? pm.test : pm.test.skip)(\"Response body is empty\", function () {",
                  "    pm.expect(pm.response.text().length).to.equal(0);",
                  "    var token = pm.response.headers.get(\"Authorization\");",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{url}}/api/v2/assessment/assignmentId/3"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "17f9ee48-c4ed-428c-91e3-208435183242",
      "name": "eols-content-processing-service",
      "description": null,
      "item": [
        {
          "_postman_id": "da81b1a0-4fab-4b31-b63d-17988f4ee1e9",
          "name": "getTokenByAdminLogin",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4832a2d6-ba12-4563-b3c4-4ab6920ab3f8",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if(responseCode.code === 200){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"token\",jsonData.token);",
                  "    console.log(\"Request Name: \" + request.name);",
                  "    console.log(\"Response time in ms: \" + responseTime);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"username\": \"eolsadmin\",\r\n   \"password\": \"testing1\"\r\n}"
            },
            "url": "{{url}}/login-service/login"
          },
          "response": [
            {
              "id": "16a1bd17-c400-4514-9706-4d6135697edd",
              "name": "token",
              "originalRequest": {
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "description": "",
                  "key": "Access-Control-Allow-Credentials",
                  "name": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "description": "",
                  "key": "Access-Control-Allow-Origin",
                  "name": "Access-Control-Allow-Origin",
                  "value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop"
                },
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "keep-alive"
                },
                {
                  "description": "",
                  "key": "Content-Length",
                  "name": "Content-Length",
                  "value": "645"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json;charset=UTF-8"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Fri, 21 Apr 2017 15:29:10 GMT"
                },
                {
                  "description": "",
                  "key": "Server",
                  "name": "Server",
                  "value": "nginx/1.10.3"
                },
                {
                  "description": "",
                  "key": "X-Application-Context",
                  "name": "X-Application-Context",
                  "value": "eols-api-gateway-server:qa:8080"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\"token\":\"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJlb2xzYWRtaW4iLCJ1c2VyIjp7InVzZXJJZCI6bnVsbCwiZXh0ZXJuYWxJZCI6bnVsbCwidXNlcm5hbWUiOiJlb2xzYWRtaW4iLCJmaXJzdE5hbWUiOm51bGwsImxhc3ROYW1lIjpudWxsLCJyb2xlIjoiQWRtIiwiZXhwaXJlRGF0ZSI6MTQ5Mjc5MjE1MDc4Niwic2Vzc2lvbklkIjoiNmJlZTdkZGQtYmFlOC00MDJhLWExMWUtMDRlNWViM2NhNzVjIiwiZW1haWxBZGRyZXNzIjpudWxsLCJyb2xlcyI6W10sImFwcFBhcmFtcyI6e319LCJpc3MiOiJlb2xzIiwianRpIjoiNzA2ODU3NzQtYjcxNi00YTM0LWIxMDctZWZjZmNkMWRkMTZmIiwiaWF0IjoxNDkyNzg4NTUwLCJuYmYiOjE0OTI3ODg1NTAsImV4cCI6MTQ5Mjc5MjE1MH0.7-BAIMlP8WCid3uGA9RS_oTpX4MEDnPxREvqMjn6FtFtgyGblBjIM-3_itqrC5V582mADWTnDw6mWS1EwMGzPA\",\"expireDate\":1492792150786,\"cookies\":null}"
            }
          ]
        },
        {
          "_postman_id": "df47bf28-ffa6-4952-b5d1-18e1f29721ab",
          "name": "getStatusList",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "76b16074-b277-44f9-85c5-9ad42ea6992c",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Empty content\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.content).to.eql([]);",
                  "    pm.expect(jsonData.totalElements).to.eql(0);",
                  "    pm.expect(jsonData.totalPages).to.eql(0);",
                  "    pm.expect(jsonData.last).to.eql(true);",
                  "    pm.expect(jsonData.numberOfElements).to.eql(0);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{url}}/buildStatus/getStatus/123"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "85b8a363-eaed-4a1f-82f2-b1b8595f6f69",
      "name": "eols-evolve-user-manager",
      "description": null,
      "item": [
        {
          "_postman_id": "2b9cfebe-a344-445f-87f0-fc5ae8a0d96b",
          "name": "getTokenByAdminLogin",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2ec2e6f0-905d-4a7d-ab0f-8b1d688806f2",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if(responseCode.code === 200){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"token\",jsonData.token);",
                  "    console.log(\"Request Name: \" + request.name);",
                  "    console.log(\"Response time in ms: \" + responseTime);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"username\": \"eolsadmin\",\r\n   \"password\": \"testing1\"\r\n}"
            },
            "url": "{{url}}/login-service/login"
          },
          "response": [
            {
              "id": "e668a7cb-fa95-4aa7-8cfb-060562ec377a",
              "name": "token",
              "originalRequest": {
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "description": "",
                  "key": "Access-Control-Allow-Credentials",
                  "name": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "description": "",
                  "key": "Access-Control-Allow-Origin",
                  "name": "Access-Control-Allow-Origin",
                  "value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop"
                },
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "keep-alive"
                },
                {
                  "description": "",
                  "key": "Content-Length",
                  "name": "Content-Length",
                  "value": "645"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json;charset=UTF-8"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Fri, 21 Apr 2017 15:29:10 GMT"
                },
                {
                  "description": "",
                  "key": "Server",
                  "name": "Server",
                  "value": "nginx/1.10.3"
                },
                {
                  "description": "",
                  "key": "X-Application-Context",
                  "name": "X-Application-Context",
                  "value": "eols-api-gateway-server:qa:8080"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\"token\":\"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJlb2xzYWRtaW4iLCJ1c2VyIjp7InVzZXJJZCI6bnVsbCwiZXh0ZXJuYWxJZCI6bnVsbCwidXNlcm5hbWUiOiJlb2xzYWRtaW4iLCJmaXJzdE5hbWUiOm51bGwsImxhc3ROYW1lIjpudWxsLCJyb2xlIjoiQWRtIiwiZXhwaXJlRGF0ZSI6MTQ5Mjc5MjE1MDc4Niwic2Vzc2lvbklkIjoiNmJlZTdkZGQtYmFlOC00MDJhLWExMWUtMDRlNWViM2NhNzVjIiwiZW1haWxBZGRyZXNzIjpudWxsLCJyb2xlcyI6W10sImFwcFBhcmFtcyI6e319LCJpc3MiOiJlb2xzIiwianRpIjoiNzA2ODU3NzQtYjcxNi00YTM0LWIxMDctZWZjZmNkMWRkMTZmIiwiaWF0IjoxNDkyNzg4NTUwLCJuYmYiOjE0OTI3ODg1NTAsImV4cCI6MTQ5Mjc5MjE1MH0.7-BAIMlP8WCid3uGA9RS_oTpX4MEDnPxREvqMjn6FtFtgyGblBjIM-3_itqrC5V582mADWTnDw6mWS1EwMGzPA\",\"expireDate\":1492792150786,\"cookies\":null}"
            }
          ]
        },
        {
          "_postman_id": "e6b2306a-d14e-4286-b85c-5af9ac2b8fd7",
          "name": "provisionUser",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0eed1106-e313-40b3-9b67-0eb50d3cb73d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 403\", function () {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"test data\": true}"
            },
            "url": "{{url}}/api/provision"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "178a65d2-ec1f-46e6-837c-82c841c4fbce",
      "name": "eols-log-collector",
      "description": null,
      "item": [
        {
          "_postman_id": "7d22d56d-8fcf-472f-a45f-1a763d96bfbd",
          "name": "getTokenByAdminLogin",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "54eb9ba3-1356-49b5-914c-326ed616dd73",
                "type": "text/javascript",
                "exec": [
                  "console.log(request.name);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "c06b9286-bf42-4b27-9972-997324c06c91",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if(responseCode.code === 200){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"token\",jsonData.token);",
                  "    console.log(\"Request Name: \" + request.name);",
                  "    console.log(\"Response time in ms: \" + responseTime);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"username\": \"eolsadmin\",\r\n   \"password\": \"testing1\"\r\n}"
            },
            "url": "{{url}}/login-service/login"
          },
          "response": [
            {
              "id": "5a448380-f44c-42f8-85bf-aad5be09f95e",
              "name": "token",
              "originalRequest": {
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "description": "",
                  "key": "Access-Control-Allow-Credentials",
                  "name": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "description": "",
                  "key": "Access-Control-Allow-Origin",
                  "name": "Access-Control-Allow-Origin",
                  "value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop"
                },
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "keep-alive"
                },
                {
                  "description": "",
                  "key": "Content-Length",
                  "name": "Content-Length",
                  "value": "645"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json;charset=UTF-8"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Fri, 21 Apr 2017 15:29:10 GMT"
                },
                {
                  "description": "",
                  "key": "Server",
                  "name": "Server",
                  "value": "nginx/1.10.3"
                },
                {
                  "description": "",
                  "key": "X-Application-Context",
                  "name": "X-Application-Context",
                  "value": "eols-api-gateway-server:qa:8080"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\"token\":\"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJlb2xzYWRtaW4iLCJ1c2VyIjp7InVzZXJJZCI6bnVsbCwiZXh0ZXJuYWxJZCI6bnVsbCwidXNlcm5hbWUiOiJlb2xzYWRtaW4iLCJmaXJzdE5hbWUiOm51bGwsImxhc3ROYW1lIjpudWxsLCJyb2xlIjoiQWRtIiwiZXhwaXJlRGF0ZSI6MTQ5Mjc5MjE1MDc4Niwic2Vzc2lvbklkIjoiNmJlZTdkZGQtYmFlOC00MDJhLWExMWUtMDRlNWViM2NhNzVjIiwiZW1haWxBZGRyZXNzIjpudWxsLCJyb2xlcyI6W10sImFwcFBhcmFtcyI6e319LCJpc3MiOiJlb2xzIiwianRpIjoiNzA2ODU3NzQtYjcxNi00YTM0LWIxMDctZWZjZmNkMWRkMTZmIiwiaWF0IjoxNDkyNzg4NTUwLCJuYmYiOjE0OTI3ODg1NTAsImV4cCI6MTQ5Mjc5MjE1MH0.7-BAIMlP8WCid3uGA9RS_oTpX4MEDnPxREvqMjn6FtFtgyGblBjIM-3_itqrC5V582mADWTnDw6mWS1EwMGzPA\",\"expireDate\":1492792150786,\"cookies\":null}"
            }
          ]
        },
        {
          "_postman_id": "188d2fe5-cfca-4900-beca-8e457fd057d6",
          "name": "logEventMessage-LoginController",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "209dd949-9e7c-4f5d-9226-ef9cec5a24a7",
                "type": "text/javascript",
                "exec": [
                  "var d = new Date();",
                  "currentDateFormat = [d.getFullYear(),",
                  "           (\"0\" + (d.getMonth()+1)).slice(-2),",
                  "           ('0'+(d.getDate())).slice(-2)].join('-');",
                  "",
                  "currentDate = currentDateFormat+'T'+('0'+(d.getHours()+1)).slice(-2)+':'+('0'+(d.getMinutes()+1)).slice(-2)+':'+('0'+(d.getSeconds()+1)).slice(-2)+'.'+'550'+'Z';",
                  "",
                  "postman.setEnvironmentVariable(\"createTS\", currentDate);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "afd12638-9ba0-4487-aa62-5b2d2fad3eb7",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 202\"] = responseCode.code === 202;"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"createTS\": \"{{createTS}}\",\n  \"message\": \"User testing\",\n  \"module\": \"LoginController\",\n  \"logLevel\": \"INFO\"\n}"
            },
            "url": "{{url}}/api/logger"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "3fb53375-a648-4ca1-a5f3-09880a8cfa12",
      "name": "eols-learning-content-service",
      "description": null,
      "item": [
        {
          "_postman_id": "93097236-586d-4be2-bdfa-40ccb53f7b12",
          "name": "getTokenByAdminLogin",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e38965e5-ad85-42e4-986b-fffda65f8ae2",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if(responseCode.code === 200){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"token\",jsonData.token);",
                  "    console.log(\"Request Name: \" + request.name);",
                  "    console.log(\"Response time in ms: \" + responseTime);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"username\": \"eolsadmin\",\r\n   \"password\": \"testing1\"\r\n}"
            },
            "url": "{{url}}/login-service/login"
          },
          "response": [
            {
              "id": "c87899c3-3894-4086-92ee-c85063976f4a",
              "name": "token",
              "originalRequest": {
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "description": "",
                  "key": "Access-Control-Allow-Credentials",
                  "name": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "description": "",
                  "key": "Access-Control-Allow-Origin",
                  "name": "Access-Control-Allow-Origin",
                  "value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop"
                },
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "keep-alive"
                },
                {
                  "description": "",
                  "key": "Content-Length",
                  "name": "Content-Length",
                  "value": "645"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json;charset=UTF-8"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Fri, 21 Apr 2017 15:29:10 GMT"
                },
                {
                  "description": "",
                  "key": "Server",
                  "name": "Server",
                  "value": "nginx/1.10.3"
                },
                {
                  "description": "",
                  "key": "X-Application-Context",
                  "name": "X-Application-Context",
                  "value": "eols-api-gateway-server:qa:8080"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\"token\":\"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJlb2xzYWRtaW4iLCJ1c2VyIjp7InVzZXJJZCI6bnVsbCwiZXh0ZXJuYWxJZCI6bnVsbCwidXNlcm5hbWUiOiJlb2xzYWRtaW4iLCJmaXJzdE5hbWUiOm51bGwsImxhc3ROYW1lIjpudWxsLCJyb2xlIjoiQWRtIiwiZXhwaXJlRGF0ZSI6MTQ5Mjc5MjE1MDc4Niwic2Vzc2lvbklkIjoiNmJlZTdkZGQtYmFlOC00MDJhLWExMWUtMDRlNWViM2NhNzVjIiwiZW1haWxBZGRyZXNzIjpudWxsLCJyb2xlcyI6W10sImFwcFBhcmFtcyI6e319LCJpc3MiOiJlb2xzIiwianRpIjoiNzA2ODU3NzQtYjcxNi00YTM0LWIxMDctZWZjZmNkMWRkMTZmIiwiaWF0IjoxNDkyNzg4NTUwLCJuYmYiOjE0OTI3ODg1NTAsImV4cCI6MTQ5Mjc5MjE1MH0.7-BAIMlP8WCid3uGA9RS_oTpX4MEDnPxREvqMjn6FtFtgyGblBjIM-3_itqrC5V582mADWTnDw6mWS1EwMGzPA\",\"expireDate\":1492792150786,\"cookies\":null}"
            }
          ]
        },
        {
          "_postman_id": "b904b467-36ad-41f2-b54a-9282e505e4ed",
          "name": "getCreditsByLessonVtwId",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6eba61c4-d59c-4d06-b86d-d645b1fdb2f4",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Body contains correct information\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.title).to.eql(\"Credits\");",
                  "    pm.expect(jsonData.contentBundle[0].type).to.eql(\"regular\");",
                  "    pm.expect(jsonData.contentBundle[0].vtwId).to.eql(\"10HCM0Z1FKB\");",
                  "    pm.expect(jsonData.contentBundle[0].contentType).to.eql(\"html\");",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"test user\"}"
            },
            "url": "{{url}}/api/learningContext/lesson/vtw/{{vtwId}}/credits"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "57908dc3-074e-40a5-9154-76db0cc2aad0",
      "name": "eols-rightnow-integration-api",
      "description": null,
      "item": [
        {
          "_postman_id": "ea2e4a08-5e7d-4239-9d05-9678d9d347ed",
          "name": "Data-Setup User Couse Crud",
          "description": null,
          "item": [
            {
              "_postman_id": "6701e992-9711-44a8-8e4d-c8d44e288d4b",
              "name": "getTokenByAdminLogin",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8ee7b8ca-9fe9-4675-80f0-e0e8cbf66534",
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if(responseCode.code === 200){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    postman.setEnvironmentVariable(\"token\",jsonData.token);",
                      "    console.log(\"Request Name: \" + request.name);",
                      "    console.log(\"Response time in ms: \" + responseTime);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "d85802a5-cc97-4e3f-9ee3-02b291b633bb",
                    "type": "text/javascript",
                    "exec": [
                      "console.log(request.name);"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"username\": \"eolsadmin\",\r\n   \"password\": \"testing1\"\r\n}"
                },
                "url": "{{url}}/login-service/login"
              },
              "response": [
                {
                  "id": "0bb43b37-9e8d-49d4-a946-35b63a22f82a",
                  "name": "token",
                  "originalRequest": {
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": ""
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Access-Control-Allow-Credentials",
                      "name": "Access-Control-Allow-Credentials",
                      "value": "true"
                    },
                    {
                      "description": "",
                      "key": "Access-Control-Allow-Origin",
                      "name": "Access-Control-Allow-Origin",
                      "value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop"
                    },
                    {
                      "description": "",
                      "key": "Connection",
                      "name": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "645"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json;charset=UTF-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 21 Apr 2017 15:29:10 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "nginx/1.10.3"
                    },
                    {
                      "description": "",
                      "key": "X-Application-Context",
                      "name": "X-Application-Context",
                      "value": "eols-api-gateway-server:qa:8080"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\"token\":\"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJlb2xzYWRtaW4iLCJ1c2VyIjp7InVzZXJJZCI6bnVsbCwiZXh0ZXJuYWxJZCI6bnVsbCwidXNlcm5hbWUiOiJlb2xzYWRtaW4iLCJmaXJzdE5hbWUiOm51bGwsImxhc3ROYW1lIjpudWxsLCJyb2xlIjoiQWRtIiwiZXhwaXJlRGF0ZSI6MTQ5Mjc5MjE1MDc4Niwic2Vzc2lvbklkIjoiNmJlZTdkZGQtYmFlOC00MDJhLWExMWUtMDRlNWViM2NhNzVjIiwiZW1haWxBZGRyZXNzIjpudWxsLCJyb2xlcyI6W10sImFwcFBhcmFtcyI6e319LCJpc3MiOiJlb2xzIiwianRpIjoiNzA2ODU3NzQtYjcxNi00YTM0LWIxMDctZWZjZmNkMWRkMTZmIiwiaWF0IjoxNDkyNzg4NTUwLCJuYmYiOjE0OTI3ODg1NTAsImV4cCI6MTQ5Mjc5MjE1MH0.7-BAIMlP8WCid3uGA9RS_oTpX4MEDnPxREvqMjn6FtFtgyGblBjIM-3_itqrC5V582mADWTnDw6mWS1EwMGzPA\",\"expireDate\":1492792150786,\"cookies\":null}"
                }
              ]
            },
            {
              "_postman_id": "503d1f6b-235a-4238-a40d-ab3a34b317fa",
              "name": "createFullEvolveUser-instructor",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "tests[\"Status code is 201\"] = responseCode.code === 201;",
                      "if(responseCode.code === 201){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    tests[\"Evovle User Id not null\"] = jsonData.userId !== null;",
                      "    postman.setEnvironmentVariable(\"evolveFacultyUserId\",jsonData.userId);",
                      "    tests[\"Evolve User Name not null\"] = jsonData.userName !== null;",
                      "    postman.setEnvironmentVariable(\"evolveFacultyUserName\",jsonData.userName);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "console.log(request.name);",
                      "var randomNumber = Math.floor(Math.random()*9999999);",
                      "postman.setEnvironmentVariable(\"randomNumber\", randomNumber);",
                      "postman.setEnvironmentVariable(\"evolveFacultyFirstname\", \"nco\");",
                      "postman.setEnvironmentVariable(\"evolveFacultyLastName\", \"instructor\");",
                      "postman.setEnvironmentVariable(\"evolveFacultyEmail\", \"nco_service_automation_instructor\"+randomNumber+\"@mailinator.com\");",
                      "postman.setEnvironmentVariable(\"evolveFacultyPassword\", \"Testing\" + randomNumber);",
                      "postman.setEnvironmentVariable(\"evolveFacultyRoles\", '[\"faculty_registered\"]');",
                      "postman.setEnvironmentVariable(\"evolveFacultyOptInMarketing\", true);",
                      "postman.setEnvironmentVariable(\"evolveFacultyIsUserDomestic\", true);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n  \"optInMarketing\": {{evolveFacultyOptInMarketing}},\r\n  \"email\": \"{{evolveFacultyEmail}}\",\r\n  \"firstName\": \"{{evolveFacultyFirstname}}\",\r\n  \"lastName\": \"{{evolveFacultyLastName}}\",\r\n  \"password\": \"{{evolveFacultyPassword}}\",\r\n  \"institutionId\": 7628,\r\n  \"phone\": \"1234567890\",\r\n  \"programType\": \"Athletic Training\",\r\n  \"isUserDomestic\": {{evolveFacultyIsUserDomestic}},\r\n  \"addresses\": [{\r\n      \"addressType\": \"HOME_ADDRESS\",\r\n      \"address1\": \"1600 JFK Blvd\",\r\n      \"address2\": \"18fl\",\r\n      \"city\": \"Philadelphia\",\r\n      \"state\": \"PA\",\r\n      \"postalCode\": \"19103\",\r\n      \"country\": \"US\"\r\n    }\r\n  ],\r\n  \"roles\": {{evolveFacultyRoles}}\r\n}"
                },
                "url": {
                  "raw": "{{url}}/api/evolveUser?role=faculty&isFullUser=true",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "api",
                    "evolveUser"
                  ],
                  "query": [
                    {
                      "key": "role",
                      "value": "faculty"
                    },
                    {
                      "key": "isFullUser",
                      "value": "true"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "1c92d62f-c97b-4168-9edd-c888279292b8",
              "name": "createEOLSInstructorUser",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//tests[\"Response time is less than 200ms\"] = responseTime < 200;",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if(responseCode.code === 200){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    postman.setEnvironmentVariable(\"eolsInstructorUserId\",jsonData.id);",
                      "    console.log(\"Response time in ms: \" + responseTime);",
                      "}",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "console.log(request.name);",
                      "var randomNumber = Math.floor(Math.random()*9999999);",
                      "postman.setEnvironmentVariable(\"eolsInstructorUserName\", \"nco_service_automation_instructor\"+randomNumber);",
                      "postman.setEnvironmentVariable(\"eolsInstructorEmailId\", \"nco_service_automation_instructor\"+randomNumber+\"@mailinator.com\");",
                      "postman.setEnvironmentVariable(\"eolsInstructorLMSExternalId\", \"nco_service_automation_instructor\"+randomNumber);",
                      "postman.setEnvironmentVariable(\"eolsInstructorExternalId\", \"nco_service_automation_instructor\"+randomNumber);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"lmsExternalId\": \"{{eolsInstructorLMSExternalId}}\",\r\n   \"externalId\": \"{{eolsInstructorExternalId}}\",\r\n   \"firstName\": \"nco\",\r\n   \"lastName\": \"instructor\",\r\n   \"username\": \"{{eolsInstructorUserName}}\",\r\n   \"emailAddress\": \"{{eolsInstructorEmailId}}\",\r\n   \"lastSeenDate\": \"\",\r\n   \"updatedAt\": \"\",\r\n   \"type\": \"Ins\"\r\n}\r\n"
                },
                "url": "{{url}}/api/eolsUser/user"
              },
              "response": []
            },
            {
              "_postman_id": "26ccb1f1-0ff1-40d1-9a85-76f57c4434fb",
              "name": "saveEOLSInstructorUserToCrosswalk",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"eolsId\":{{eolsInstructorUserId}},\n  \"externalUserId\": {{randomNumber}},\n  \"type\":\"evolve\",\n  \"userName\":\"{{evolveFacultyUserName}}\",\n  \"userData\" : null\n}"
                },
                "url": "{{url}}/api/eolsUser/externalUser"
              },
              "response": []
            },
            {
              "_postman_id": "9dcf5ce6-550f-46ab-8018-c834f6046679",
              "name": "createEOLSCourse",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if(responseCode.code === 200){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    postman.setEnvironmentVariable(\"courseSectionId\",jsonData.id);",
                      "    postman.setEnvironmentVariable(\"courseId\",jsonData.courseId);",
                      "    postman.setEnvironmentVariable(\"lmsExternalId\",jsonData.lmsExternalId);",
                      "    postman.setEnvironmentVariable(\"externalId\",jsonData.externalId);",
                      "    postman.setEnvironmentVariable(\"entitlementId\",jsonData.entitlements[0].id);",
                      "    // postman.setEnvironmentVariable(\"institutionId\",jsonData.institution.id);",
                      "    console.log(\"Response time in ms: \" + responseTime);",
                      "    console.log(\"Course Section Id: \" + jsonData.id);",
                      "}",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "console.log(request.name);",
                      "var randomNumber = Math.floor(Math.random()*9999999);",
                      "postman.setEnvironmentVariable(\"randomNumber\", randomNumber);",
                      "if(!postman.getEnvironmentVariable('isbn')){",
                      "    postman.setEnvironmentVariable('isbn', '9780323446433');",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n      \"courseId\": \"10MDNTNF5SF\",\r\n      \"externalId\": \"{{randomNumber}}\",\r\n      \"lmsClientId\": \"canvas.qa\",\r\n      \"consumerKey\": \"keycanvas\",\r\n      \"lmsExternalId\": \"{{randomNumber}}\",\r\n      \"courseName\": \"nco_service_automation\",\r\n      \"sectionName\": null,\r\n      \"duration\": null,\r\n      \"institution\": {\r\n        \"name\": \"eolsCanvasUAT\",\r\n        \"externalId\": \"eolsTestCanvas.edu\"\r\n      },\r\n      \"courseActive\": true,\r\n      \"entitlements\": [{\r\n          \"isbn\": \"{{isbn}}\",\r\n          \"type\": \"EPRODUCT\",\r\n          \"data\": \"{\\\"components\\\":[],\\\"isbn\\\":\\\"{{isbn}}\\\",\\\"productTypeName\\\":\\\"Nursing Concepts\\\",\\\"productTypeKey\\\":\\\"nursing_concepts_ia\\\",\\\"title\\\":\\\"Nursing Concepts Online for RN 2.0\\\",\\\"type\\\":\\\"eproduct\\\"}\"\r\n        }\r\n      ],\r\n      \"role\": \"ACTIVE\",\r\n      \"locked\": null,\r\n      \"copied\": null\r\n    }"
                },
                "url": "{{url}}/api/courseSections"
              },
              "response": [
                {
                  "id": "1e780d6a-687d-4453-8ecd-f1e1e1a7f9cd",
                  "name": "createEOLSCourse",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n      \"courseId\": \"10MDNTNF5SF\",\r\n      \"externalId\": \"{{randomNumber}}\",\r\n      \"lmsClientId\": \"canvas.qa\",\r\n      \"consumerKey\": \"keycanvas\",\r\n      \"lmsExternalId\": \"{{randomNumber}}\",\r\n      \"courseName\": \"nco_service_automation\",\r\n      \"sectionName\": null,\r\n      \"duration\": null,\r\n      \"institution\": {\r\n        \"name\": \"eolsCanvasUAT\",\r\n        \"externalId\": \"eolsTestCanvas.edu\"\r\n      },\r\n      \"courseActive\": true,\r\n      \"entitlements\": [{\r\n          \"isbn\": \"{{isbn}}\",\r\n          \"type\": \"EPRODUCT\",\r\n          \"data\": \"{\\\"components\\\":[],\\\"isbn\\\":\\\"{{isbn}}\\\",\\\"productTypeName\\\":\\\"Nursing Concepts\\\",\\\"productTypeKey\\\":\\\"nursing_concepts_ia\\\",\\\"title\\\":\\\"Nursing Concepts Online for RN 2.0\\\",\\\"type\\\":\\\"eproduct\\\"}\"\r\n        }\r\n      ],\r\n      \"role\": \"ACTIVE\",\r\n      \"locked\": null,\r\n      \"copied\": null\r\n    }"
                    },
                    "url": "{{url}}/api/courseSections"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials.",
                      "key": "access-control-allow-credentials",
                      "name": "access-control-allow-credentials",
                      "value": "true"
                    },
                    {
                      "description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource.",
                      "key": "access-control-allow-origin",
                      "name": "access-control-allow-origin",
                      "value": "chrome-extension://aicmkgpgakddgnaphhhpliifpcfhicfo"
                    },
                    {
                      "description": "Lets a server whitelist headers that browsers are allowed to access.",
                      "key": "access-control-expose-headers",
                      "name": "access-control-expose-headers",
                      "value": "ETag, X-Total-Count"
                    },
                    {
                      "description": "The type of encoding used on the data.",
                      "key": "content-encoding",
                      "name": "content-encoding",
                      "value": "gzip"
                    },
                    {
                      "description": "The mime type of this content",
                      "key": "content-type",
                      "name": "content-type",
                      "value": "application/json;charset=UTF-8"
                    },
                    {
                      "description": "The date and time that the message was sent",
                      "key": "date",
                      "name": "date",
                      "value": "Tue, 13 Mar 2018 05:05:28 GMT"
                    },
                    {
                      "description": "A name for the server",
                      "key": "server",
                      "name": "server",
                      "value": "nginx/1.12.1"
                    },
                    {
                      "description": "Custom header",
                      "key": "status",
                      "name": "status",
                      "value": "200"
                    },
                    {
                      "description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server.",
                      "key": "vary",
                      "name": "vary",
                      "value": "Accept-Encoding"
                    },
                    {
                      "description": "Custom header",
                      "key": "x-application-context",
                      "name": "x-application-context",
                      "value": "eols-api-gateway-server:openshift:8080"
                    },
                    {
                      "description": "Custom header",
                      "key": "x-whom",
                      "name": "x-whom",
                      "value": "api-gateway"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "hostOnly": false,
                      "httpOnly": true,
                      "domain": ".els-ols.com",
                      "path": "/",
                      "secure": false,
                      "session": true,
                      "value": "APKAI447C5ILY57Q5FQQ",
                      "key": "CloudFront-Key-Pair-Id"
                    },
                    {
                      "expires": "Invalid Date",
                      "hostOnly": true,
                      "httpOnly": true,
                      "domain": "eolsapi-stage.apps.els-ols.com",
                      "path": "/",
                      "secure": true,
                      "session": true,
                      "value": "40ce853ce3aba3e563632c44a47c0ee4",
                      "key": "3494ff5d1eefd923b2f05c493fd13eaa"
                    },
                    {
                      "expires": "Invalid Date",
                      "hostOnly": false,
                      "httpOnly": true,
                      "domain": ".els-ols.com",
                      "path": "/",
                      "secure": false,
                      "session": true,
                      "value": "eyJTdGF0ZW1lbnQiOiBbeyJSZXNvdXJjZSI6Imh0dHBzOi8vY29udGVudC1xYS5lbHMtb2xzLmNvbS8qIiwiQ29uZGl0aW9uIjp7IkRhdGVMZXNzVGhhbiI6eyJBV1M6RXBvY2hUaW1lIjoxNTIxNTA0MDAwfSwiSXBBZGRyZXNzIjp7IkFXUzpTb3VyY2VJcCI6IjAuMC4wLjAvMCJ9fX1dfQ__",
                      "key": "CloudFront-Policy"
                    },
                    {
                      "expires": "Invalid Date",
                      "hostOnly": false,
                      "httpOnly": true,
                      "domain": ".els-ols.com",
                      "path": "/",
                      "secure": false,
                      "session": true,
                      "value": "YAB8HIVslh6A8nSjac7MqgqIIF2AuJPSZlaktRd2bYm2EjhgS-hUa4B2U8zoskIT1acACkDlx0737LwM1JioJCa~M-7bk4U1aN2BuRsReN4VF2vkJQ5aJye1i0aQkTRvGCaEkDM7Cpgiiu9Os96J8Cm-~9syFZRgrYMbLcYQR8r32BYs1qRmDXv6SephJjw4y0vqfFy-~bXPY81RBAXhqZJP~6hzIAhPCkYsY2baKqLvNfKZACeDIx1wm2iENHqTVeMMqe4YfN2wKWfRyklNoHJYdlvRYIKonZ6LVgDVRvur7sY4~P7iKtkLmCdmya5zcUtOR2vT9pJOET3Mwe185A__",
                      "key": "CloudFront-Signature"
                    },
                    {
                      "expires": "Invalid Date",
                      "hostOnly": true,
                      "httpOnly": true,
                      "domain": "eolsapi-stage.apps.els-ols.com",
                      "path": "/",
                      "secure": false,
                      "session": true,
                      "value": "48FFCAE06793491B0978975E947593E4",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\"id\":69198,\"courseId\":\"10MDNTNF5SF\",\"externalId\":\"1588296\",\"lmsClientId\":\"canvas.qa\",\"consumerKey\":\"keycanvas\",\"lmsExternalId\":\"1588296\",\"courseName\":\"nco_service_automation\",\"sectionName\":null,\"duration\":null,\"institution\":null,\"courseActive\":true,\"schedules\":null,\"entitlements\":[{\"id\":230335,\"isbn\":\"9780323446433\",\"type\":\"EPRODUCT\",\"data\":\"{\\\"components\\\":[],\\\"isbn\\\":\\\"9780323446433\\\",\\\"productTypeName\\\":\\\"Nursing Concepts\\\",\\\"productTypeKey\\\":\\\"nursing_concepts_ia\\\",\\\"title\\\":\\\"Nursing Concepts Online for RN 2.0\\\",\\\"type\\\":\\\"eproduct\\\"}\"}],\"role\":\"ACTIVE\",\"locked\":null,\"copied\":null}"
                }
              ]
            },
            {
              "_postman_id": "4ae37304-a15b-40d7-a58c-a345e9b5f267",
              "name": "saveEOLSInstrutorUserToCourseSection",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "//tests[\"Response time is less than 200ms\"] = responseTime < 200;",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if(responseCode.code === 200){",
                      "    console.log(\"Response time in ms: \" + responseTime);",
                      "}",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "console.log(request.name);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": "{{url}}/apiv1/eolsUser/{{eolsInstructorUserId}}/courseSection/{{courseSectionId}}"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "492e115d-cd6e-485c-8f5f-20973fb68431",
          "name": "eols-rightnow-integration-api",
          "description": null,
          "item": [
            {
              "_postman_id": "e2a143ca-e54f-44e0-bb72-bd633bc36b96",
              "name": "getHelp",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5f75796d-c264-4d4c-a5ad-9f6933f84007",
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;"
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{url}}/api/v1/help?context=null&courseId={{courseSectionId}}&userId={{eolsInstructorUserId}}",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "help"
                  ],
                  "query": [
                    {
                      "key": "context",
                      "value": "null"
                    },
                    {
                      "key": "courseId",
                      "value": "{{courseSectionId}}"
                    },
                    {
                      "key": "userId",
                      "value": "{{eolsInstructorUserId}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "e8a497f6-c686-49cd-8409-ab0a02172162",
              "name": "getApplicationHelp",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fec8fa14-5db3-4ea1-950b-01e389d2164d",
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;"
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{url}}/api/v1/help/application?app=NCO&courseId={{courseSectionId}}&supportTicketType=CONTACT_US&userId={{eolsInstructorUserId}}",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "help",
                    "application"
                  ],
                  "query": [
                    {
                      "key": "app",
                      "value": "NCO"
                    },
                    {
                      "key": "courseId",
                      "value": "{{courseSectionId}}"
                    },
                    {
                      "key": "supportTicketType",
                      "value": "CONTACT_US"
                    },
                    {
                      "key": "userId",
                      "value": "{{eolsInstructorUserId}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "9c6c3c07-23e8-4396-8f1b-a877d4aa1af5",
              "name": "submitTicket",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a733556c-d81e-4740-a5e3-f3df0f1d10a4",
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 201\"] = responseCode.code === 201;"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"appIdType\":\"HESI\",\n  \"eolsUserId\":{{eolsInstructorUserId}},\n  \"ticketType\": \"CONTACT_US\",\n  \"userRole\":\"Ins\",\n  \"eolsCourseId\":\"\",\n  \"browserType\":\"\",\n  \"browserVersion\":\"\",\n  \"contextUrl\":\"\",\n  \"description\":\"\",\n  \"eolsUserName\": \"\",\n  \"operatingSystem\": \"\",\n  \"operationSystemVersion\": \"\"\n}"
                },
                "url": "{{url}}/api/v1/supportTickets"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "4f94e59f-5527-4680-95f7-ff81af1c9964",
      "name": "eols-lti-launch-service",
      "description": null,
      "item": [
        {
          "_postman_id": "8770a5c4-4cf6-4c65-982d-1f5233900487",
          "name": "getTokenByAdminLogin",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b0679f61-258d-4e5e-ab79-3031de995e2d",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if(responseCode.code === 200){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"token\",jsonData.token);",
                  "    console.log(\"Request Name: \" + request.name);",
                  "    console.log(\"Response time in ms: \" + responseTime);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"username\": \"eolsadmin\",\r\n   \"password\": \"testing1\"\r\n}"
            },
            "url": "{{url}}/login-service/login"
          },
          "response": [
            {
              "id": "c36d1dbb-e3d1-424c-96b1-798c67b5d4fd",
              "name": "token",
              "originalRequest": {
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "description": "",
                  "key": "Access-Control-Allow-Credentials",
                  "name": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "description": "",
                  "key": "Access-Control-Allow-Origin",
                  "name": "Access-Control-Allow-Origin",
                  "value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop"
                },
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "keep-alive"
                },
                {
                  "description": "",
                  "key": "Content-Length",
                  "name": "Content-Length",
                  "value": "645"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json;charset=UTF-8"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Fri, 21 Apr 2017 15:29:10 GMT"
                },
                {
                  "description": "",
                  "key": "Server",
                  "name": "Server",
                  "value": "nginx/1.10.3"
                },
                {
                  "description": "",
                  "key": "X-Application-Context",
                  "name": "X-Application-Context",
                  "value": "eols-api-gateway-server:qa:8080"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\"token\":\"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJlb2xzYWRtaW4iLCJ1c2VyIjp7InVzZXJJZCI6bnVsbCwiZXh0ZXJuYWxJZCI6bnVsbCwidXNlcm5hbWUiOiJlb2xzYWRtaW4iLCJmaXJzdE5hbWUiOm51bGwsImxhc3ROYW1lIjpudWxsLCJyb2xlIjoiQWRtIiwiZXhwaXJlRGF0ZSI6MTQ5Mjc5MjE1MDc4Niwic2Vzc2lvbklkIjoiNmJlZTdkZGQtYmFlOC00MDJhLWExMWUtMDRlNWViM2NhNzVjIiwiZW1haWxBZGRyZXNzIjpudWxsLCJyb2xlcyI6W10sImFwcFBhcmFtcyI6e319LCJpc3MiOiJlb2xzIiwianRpIjoiNzA2ODU3NzQtYjcxNi00YTM0LWIxMDctZWZjZmNkMWRkMTZmIiwiaWF0IjoxNDkyNzg4NTUwLCJuYmYiOjE0OTI3ODg1NTAsImV4cCI6MTQ5Mjc5MjE1MH0.7-BAIMlP8WCid3uGA9RS_oTpX4MEDnPxREvqMjn6FtFtgyGblBjIM-3_itqrC5V582mADWTnDw6mWS1EwMGzPA\",\"expireDate\":1492792150786,\"cookies\":null}"
            }
          ]
        },
        {
          "_postman_id": "10eb0017-55e3-4035-807f-1da66bb7b3bf",
          "name": "SCHEDULE_OUTCOMES_API",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1ed095c9-696e-4f74-b73f-41449abd7196",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"test user\"}"
            },
            "url": "{{url}}/v1/lti/launch/outcomes/retry"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "50085cd9-5008-4167-b2d2-8bdee4a42d53",
      "name": "eols-lti-configuration-service",
      "description": null,
      "item": [
        {
          "_postman_id": "b4cae909-0489-4642-b872-96d00265c26c",
          "name": "getTokenByAdminLogin",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "79338ef0-0b5e-46ba-a8c6-f600482507c7",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if(responseCode.code === 200){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"token\",jsonData.token);",
                  "    console.log(\"Request Name: \" + request.name);",
                  "    console.log(\"Response time in ms: \" + responseTime);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"username\": \"eolsadmin\",\r\n   \"password\": \"testing1\"\r\n}"
            },
            "url": "{{url}}/login-service/login"
          },
          "response": [
            {
              "id": "a510ebc1-401c-4e14-bc2d-b39df4db80c4",
              "name": "token",
              "originalRequest": {
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "description": "",
                  "key": "Access-Control-Allow-Credentials",
                  "name": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "description": "",
                  "key": "Access-Control-Allow-Origin",
                  "name": "Access-Control-Allow-Origin",
                  "value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop"
                },
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "keep-alive"
                },
                {
                  "description": "",
                  "key": "Content-Length",
                  "name": "Content-Length",
                  "value": "645"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json;charset=UTF-8"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Fri, 21 Apr 2017 15:29:10 GMT"
                },
                {
                  "description": "",
                  "key": "Server",
                  "name": "Server",
                  "value": "nginx/1.10.3"
                },
                {
                  "description": "",
                  "key": "X-Application-Context",
                  "name": "X-Application-Context",
                  "value": "eols-api-gateway-server:qa:8080"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\"token\":\"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJlb2xzYWRtaW4iLCJ1c2VyIjp7InVzZXJJZCI6bnVsbCwiZXh0ZXJuYWxJZCI6bnVsbCwidXNlcm5hbWUiOiJlb2xzYWRtaW4iLCJmaXJzdE5hbWUiOm51bGwsImxhc3ROYW1lIjpudWxsLCJyb2xlIjoiQWRtIiwiZXhwaXJlRGF0ZSI6MTQ5Mjc5MjE1MDc4Niwic2Vzc2lvbklkIjoiNmJlZTdkZGQtYmFlOC00MDJhLWExMWUtMDRlNWViM2NhNzVjIiwiZW1haWxBZGRyZXNzIjpudWxsLCJyb2xlcyI6W10sImFwcFBhcmFtcyI6e319LCJpc3MiOiJlb2xzIiwianRpIjoiNzA2ODU3NzQtYjcxNi00YTM0LWIxMDctZWZjZmNkMWRkMTZmIiwiaWF0IjoxNDkyNzg4NTUwLCJuYmYiOjE0OTI3ODg1NTAsImV4cCI6MTQ5Mjc5MjE1MH0.7-BAIMlP8WCid3uGA9RS_oTpX4MEDnPxREvqMjn6FtFtgyGblBjIM-3_itqrC5V582mADWTnDw6mWS1EwMGzPA\",\"expireDate\":1492792150786,\"cookies\":null}"
            }
          ]
        },
        {
          "_postman_id": "b178c337-2ae8-457f-adff-3d4eb144df7d",
          "name": "getConfigByClientIdAndType",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f1be8e9b-75b7-4443-a10d-7e348dd6c202",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"test user\"}"
            },
            "url": "{{url}}/api/eols/lticonfig/clientIdType/123/type"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "02538fbe-f6cb-419a-952e-98c593ef4487",
      "name": "eols-sso-service",
      "description": null,
      "item": [
        {
          "_postman_id": "b734ec33-99a1-4816-b54a-922d8cdd3834",
          "name": "getTokenByAdminLogin",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "907c6526-8a2a-4a3c-9df3-fcc3189f4b95",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if(responseCode.code === 200){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"token\",jsonData.token);",
                  "    console.log(\"Request Name: \" + request.name);",
                  "    console.log(\"Response time in ms: \" + responseTime);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"username\": \"eolsadmin\",\r\n   \"password\": \"testing1\"\r\n}"
            },
            "url": "{{url}}/login-service/login"
          },
          "response": [
            {
              "id": "bfe984a1-fb16-4d94-a59d-7563436ebb07",
              "name": "token",
              "originalRequest": {
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "description": "",
                  "key": "Access-Control-Allow-Credentials",
                  "name": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "description": "",
                  "key": "Access-Control-Allow-Origin",
                  "name": "Access-Control-Allow-Origin",
                  "value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop"
                },
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "keep-alive"
                },
                {
                  "description": "",
                  "key": "Content-Length",
                  "name": "Content-Length",
                  "value": "645"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json;charset=UTF-8"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Fri, 21 Apr 2017 15:29:10 GMT"
                },
                {
                  "description": "",
                  "key": "Server",
                  "name": "Server",
                  "value": "nginx/1.10.3"
                },
                {
                  "description": "",
                  "key": "X-Application-Context",
                  "name": "X-Application-Context",
                  "value": "eols-api-gateway-server:qa:8080"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\"token\":\"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJlb2xzYWRtaW4iLCJ1c2VyIjp7InVzZXJJZCI6bnVsbCwiZXh0ZXJuYWxJZCI6bnVsbCwidXNlcm5hbWUiOiJlb2xzYWRtaW4iLCJmaXJzdE5hbWUiOm51bGwsImxhc3ROYW1lIjpudWxsLCJyb2xlIjoiQWRtIiwiZXhwaXJlRGF0ZSI6MTQ5Mjc5MjE1MDc4Niwic2Vzc2lvbklkIjoiNmJlZTdkZGQtYmFlOC00MDJhLWExMWUtMDRlNWViM2NhNzVjIiwiZW1haWxBZGRyZXNzIjpudWxsLCJyb2xlcyI6W10sImFwcFBhcmFtcyI6e319LCJpc3MiOiJlb2xzIiwianRpIjoiNzA2ODU3NzQtYjcxNi00YTM0LWIxMDctZWZjZmNkMWRkMTZmIiwiaWF0IjoxNDkyNzg4NTUwLCJuYmYiOjE0OTI3ODg1NTAsImV4cCI6MTQ5Mjc5MjE1MH0.7-BAIMlP8WCid3uGA9RS_oTpX4MEDnPxREvqMjn6FtFtgyGblBjIM-3_itqrC5V582mADWTnDw6mWS1EwMGzPA\",\"expireDate\":1492792150786,\"cookies\":null}"
            }
          ]
        },
        {
          "_postman_id": "034f43d7-b449-43e9-8439-c6559e7a4b5a",
          "name": "oauthPost",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "08e80563-ba8d-40dd-945d-d88c95c465a2",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "if(responseCode.code === 200) {",
                  "    var jsonData = pm.response.json();",
                  "    tests[\"url contains .com/sso\"] = jsonData.endpointUrl.includes(\".com/sso\");",
                  "    tests[\"user_id is 123456\"] = jsonData.parameters[0].value.includes(\"123456\");",
                  "    tests[\"roles is Student\"] = jsonData.parameters[1].value.includes(\"Student\");",
                  "    tests[\"lis_person_contact_email_primary is email@moonbeam.com\"] = jsonData.parameters[2].value.includes(\"email@moonbeam.com\");",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"user\": {\n\t\t\"externalId\": 123456,\n\t\t\"firstName\": \"Mac\",\n\t\t\"lastName\": \"Ry\",\n\t\t\"role\": \"stu\",\n\t\t\"username\": \"email@moonbeam.com\"\n\t}\n}"
            },
            "url": "{{url}}/sso/evolve"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "77f767c3-acc7-4701-aea8-59260bef7f14",
      "name": "eols-content-proxy",
      "description": "",
      "item": [
        {
          "_postman_id": "c0ddf912-30ec-4845-87c6-c38a82ea3848",
          "name": "getTokenByAdminLogin",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if(responseCode.code === 200){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"token\",jsonData.token);",
                  "   console.log(\"Response time in ms: \" + responseTime);",
                  "   console.log(\"Access Token: \" + jsonData.token);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"username\": \"eolsadmin\",\r\n   \"password\": \"testing1\"\r\n}"
            },
            "url": "{{url}}/login-service/login"
          },
          "response": [
            {
              "id": "64b70305-3860-4d3f-a768-200fe1718e56",
              "name": "token",
              "originalRequest": {
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "description": "",
                  "key": "Access-Control-Allow-Credentials",
                  "name": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "description": "",
                  "key": "Access-Control-Allow-Origin",
                  "name": "Access-Control-Allow-Origin",
                  "value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop"
                },
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "keep-alive"
                },
                {
                  "description": "",
                  "key": "Content-Length",
                  "name": "Content-Length",
                  "value": "645"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json;charset=UTF-8"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Fri, 21 Apr 2017 15:29:10 GMT"
                },
                {
                  "description": "",
                  "key": "Server",
                  "name": "Server",
                  "value": "nginx/1.10.3"
                },
                {
                  "description": "",
                  "key": "X-Application-Context",
                  "name": "X-Application-Context",
                  "value": "eols-api-gateway-server:qa:8080"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\"token\":\"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJlb2xzYWRtaW4iLCJ1c2VyIjp7InVzZXJJZCI6bnVsbCwiZXh0ZXJuYWxJZCI6bnVsbCwidXNlcm5hbWUiOiJlb2xzYWRtaW4iLCJmaXJzdE5hbWUiOm51bGwsImxhc3ROYW1lIjpudWxsLCJyb2xlIjoiQWRtIiwiZXhwaXJlRGF0ZSI6MTQ5Mjc5MjE1MDc4Niwic2Vzc2lvbklkIjoiNmJlZTdkZGQtYmFlOC00MDJhLWExMWUtMDRlNWViM2NhNzVjIiwiZW1haWxBZGRyZXNzIjpudWxsLCJyb2xlcyI6W10sImFwcFBhcmFtcyI6e319LCJpc3MiOiJlb2xzIiwianRpIjoiNzA2ODU3NzQtYjcxNi00YTM0LWIxMDctZWZjZmNkMWRkMTZmIiwiaWF0IjoxNDkyNzg4NTUwLCJuYmYiOjE0OTI3ODg1NTAsImV4cCI6MTQ5Mjc5MjE1MH0.7-BAIMlP8WCid3uGA9RS_oTpX4MEDnPxREvqMjn6FtFtgyGblBjIM-3_itqrC5V582mADWTnDw6mWS1EwMGzPA\",\"expireDate\":1492792150786,\"cookies\":null}"
            }
          ]
        },
        {
          "_postman_id": "4fabe648-b83d-42aa-931e-f8bb767c735f",
          "name": "createFullUser-Student",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "588e5095-a56f-4ce8-b413-7fc0d05958ed",
                "type": "text/javascript",
                "exec": [
                  "var randomNumber = Math.floor(Math.random()*9999999);",
                  "var email = \"serviceAutomation\"+randomNumber+\"@mailinator.com\";",
                  "postman.setEnvironmentVariable(\"studentEmail\", email);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "d90cc920-89b3-4e89-834d-819377bf212c",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 201\"] = responseCode.code === 201;",
                  "",
                  "",
                  "console.log(responseTime);",
                  "",
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"studentUserId\",jsonData.userId);",
                  "postman.setEnvironmentVariable(\"studentUserName\",jsonData.userName);",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"lastName\": \"Automation\",\r\n   \"alternateEmail\": \"{{studentEmail}}\",\r\n   \"vstProfile\":    {\r\n      \"vstPassword\": \"Testing1\",\r\n      \"vstSecurityQuestionAnswer\": \"sec quest\",\r\n      \"vstSecurityQuestionId\": 2\r\n   },\r\n   \"knoProfile\": {\"knoPassword\": \"knopassword\"},\r\n   \"graduationYear\": 2016,\r\n   \"password\": \"Testing1\",\r\n   \"isUserDomestic\": true,\r\n   \"email\": \"{{studentEmail}}\",\r\n   \"studentId\": \"student007\",\r\n   \"roles\": [\"student_registered\"],\r\n   \"optInMarketing\": true,\r\n   \"userInstitution\":    {\r\n      \"name\": \"Temple University\",\r\n      \"state\": \"PA\",\r\n      \"country\": \"US\",\r\n      \"city\": \"Philadelphia\"\r\n   },\r\n   \"firstName\": \"Service\",\r\n   \"programType\": \"Basic Science\",\r\n   \"addresses\":    [\r\n            {\r\n         \"addressType\": \"HOME_ADDRESS\",\r\n         \"city\": \"Philadelphia\",\r\n         \"state\": \"PA\",\r\n         \"country\": \"US\"\r\n      },\r\n            {\r\n         \"addressType\": \"SHIPPING_ADDRESS\",\r\n         \"attentionName\": \"Shipping attention Of\",\r\n         \"address1\": \"1600 JOHN F KENNEDY BLVD # 1800\",\r\n         \"city\": \"PHILADELPHIA\",\r\n         \"state\": \"PA\",\r\n         \"postalCode\": \"19103\",\r\n         \"country\": \"US\"\r\n      },\r\n            {\r\n         \"addressType\": \"BILLING_ADDRESS\",\r\n         \"address1\": \"1600 JOHN F KENNEDY BLVD # 1800\",\r\n         \"city\": \"PHILADELPHIA\",\r\n         \"state\": \"PA\",\r\n         \"postalCode\": \"19103\",\r\n         \"country\": \"US\"\r\n      }\r\n   ]\r\n}"
            },
            "url": {
              "raw": "{{url}}/api/evolveUser?isFullUser=false&role=student",
              "host": [
                "{{url}}"
              ],
              "path": [
                "api",
                "evolveUser"
              ],
              "query": [
                {
                  "key": "isFullUser",
                  "value": "false"
                },
                {
                  "key": "role",
                  "value": "student"
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "6b69a81b-3a32-4d90-8f7e-614f2860f111",
          "name": "loginStudent - email",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c4a56628-2a8e-488d-a700-6012ad4927a7",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "tests[\"Response time is less than 500ms\"] = responseTime < 500;",
                  "console.log(responseTime);",
                  "",
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"studentSessionId\",jsonData.sessionId);",
                  "postman.setEnvironmentVariable(\"studentToken\",jsonData.token.token);",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"password\":\"Testing1\",\n  \"email\":\"{{studentEmail}}\"\n\n}"
            },
            "url": "{{url}}/login-service/evolvePortalLogin"
          },
          "response": []
        },
        {
          "_postman_id": "73cdd8e2-3e50-4cdf-ae02-3780382be533",
          "name": "createCourse",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "bfc362d6-1aee-4176-b84e-f749a157f84f",
                "type": "text/javascript",
                "exec": [
                  "console.log(request.name);",
                  "var randomNumber = Math.floor(Math.random()*9999999);",
                  "postman.setEnvironmentVariable(\"randomCourseNumber\", randomNumber);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "2c361b74-5415-420d-8547-02b29e04ec6d",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if(responseCode.code === 200){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"courseSectionId\",jsonData.id);",
                  "    postman.setEnvironmentVariable(\"courseName\",jsonData.courseName);",
                  "    console.log(\"Response time in ms: \" + responseTime);",
                  "    console.log(\"Course Section Id: \" + jsonData.id);",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"courseId\": \"10MPR23XKKZ\",\r\n   \"externalId\": \"{{randomCourseNumber}}\",\r\n   \"lmsClientId\": \"canvas.qa\",\r\n   \"consumerKey\": \"keycanvas\",\r\n   \"lmsExternalId\": \"{{randomCourseNumber}}\",\r\n   \"courseName\": \"HESI-ServiceTest\",\r\n   \"sectionName\": null,\r\n   \"duration\": null,\r\n   \"institution\":    {\r\n      \"id\": 5,\r\n      \"name\": \"eolsCanvasUAT\",\r\n      \"externalId\": \"eolsTestCanvas.edu\"\r\n   },\r\n   \"courseActive\": true,\r\n   \"schedules\": [],\r\n   \"entitlements\":    [\r\n            {\r\n         \"isbn\": \"9780323398817\",\r\n         \"type\": \"COLLECTION\",\r\n         \"data\": \"{\\\"title\\\":\\\"Sherpath for Fundamentals (Potter Fundamentals Version)\\\"}\"\r\n      },\r\n            {\r\n         \"isbn\": \"9780323481205\",\r\n         \"type\": \"EBOOK\",\r\n         \"data\": \"{\\\"vbId\\\":\\\"9780323327404\\\",\\\"eeoIsbn\\\":\\\"9780323400053\\\",\\\"title\\\":\\\"PART - Sherpath - Fundamentals of Nursing - Elsevier eBook on VitalSource\\\"}\"\r\n      },\r\n            {\r\n         \"isbn\": \"9780323481199\",\r\n         \"type\": \"EPRODUCT\",\r\n         \"data\": \"{\\\"title\\\":\\\"PART - Sherpath for Fundamentals (Potter Fundamentals Version)\\\"}\"\r\n      }\r\n   ],\r\n   \"role\": \"ACTIVE\",\r\n   \"locked\": null,\r\n   \"copied\": null\r\n}"
            },
            "url": "{{url}}/api/courseSections"
          },
          "response": []
        },
        {
          "_postman_id": "812d1505-afa1-4d7b-97d8-64ec72ff9592",
          "name": "secureLink",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "378682c9-c1ce-4186-a2b3-09c57a47b579",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"contentTitle\": \"{{courseName}}\",\n\t\"courseId\": \"{{courseSectionId}}\",\n\t\"courseTitle\": \"{{courseName}}\",\n\t\"email\": \"{{studentEmail2}}\",\n\t\"isbn\": \"1234\",\n\t\"firstname\": \"Service\",\n\t\"lastname\": \"Automation\",\n\t\"userId\": \"{{studentUserId2}}\",\n\t\"sessionId\": \"{{studentSessionId2}}\"\n}"
            },
            "url": "{{url}}/api/content-proxy/securelink"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "3e828d86-22cc-4ca0-b111-31a302d2fe05",
      "name": "eols-gradebook-service",
      "description": "",
      "item": [
        {
          "_postman_id": "c340ba2c-f045-471a-91dc-cdef46013c8c",
          "name": "Get Admin Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "17e9e3ae-988b-48ad-a8ca-f58e319d2818",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"created token\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "var jsonData = pm.response.json();",
                  "pm.environment.set('token', jsonData.token);",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json, text/plain, */*"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"username\": \"eolsadmin\",\r\n   \"password\": \"testing1\"\r\n}"
            },
            "url": "{{url}}/login-service/login"
          },
          "response": []
        },
        {
          "_postman_id": "8313e9ad-d0cd-4c0d-bdfc-715a08f11d48",
          "name": "Create Course",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"created course\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "var course = pm.response.json();",
                  "pm.environment.set('courseId', course.id);",
                  ""
                ],
                "id": "4a096d76-8b05-423c-9d2b-70a2a99f4fa8",
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"courseId\": \"courseId\",\n  \"lmsClientId\": \"EolsNoOpClientId\",\n  \"consumerKey\": \"key\",\n  \"courseActive\": true\n}\n"
            },
            "url": "{{url}}/api/courseSections"
          },
          "response": []
        },
        {
          "_postman_id": "6192465f-e927-4267-bc2e-fd0ba2127d1e",
          "name": "Create User",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var uuid = require('uuid');",
                  "pm.environment.set('userGuid', uuid.v4());",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"created user\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "",
                  "var user = pm.response.json();",
                  "pm.environment.set('userId', user.id);",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"emailAddress\": \"{{userGuid}}@user.com\",\n  \"externalId\": \"user_{{userGuid}}\",\n  \"type\": \"Stu\",\n  \"lmsExternalId\": \"lmsUser_{{userGuid}}\",\n  \"username\": \"user_{{userGuid}}\"\n}"
            },
            "url": "{{url}}/api/eolsUser/user"
          },
          "response": []
        },
        {
          "_postman_id": "040a5842-5a0a-4384-a6d8-79399f10179a",
          "name": "Create Assignment",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "9c47c7ea-5549-450a-9479-b517959d75d8",
                "type": "text/javascript",
                "exec": [
                  "function forceTwoDigits(dateToEdit) {",
                  "    return (String(dateToEdit).length < 2) ? \"0\" + dateToEdit: dateToEdit;",
                  "}",
                  "",
                  "var today = new Date();",
                  "var year = today.getFullYear();",
                  "var month = forceTwoDigits(today.getMonth()+1);",
                  "var date = forceTwoDigits(today.getDate());",
                  "var hrs = forceTwoDigits(today.getHours()) ;",
                  "var mins = forceTwoDigits(today.getMinutes());",
                  "var secs = forceTwoDigits(today.getSeconds());",
                  "var deadlineDate = year + \"-\" + month + \"-\" + date + \" \" + (hrs+4) + \":\" + mins + \":\" + secs;",
                  "var beforeDeadlineDate = year + \"-\" + month + \"-\" + forceTwoDigits(today.getDate()-2) + \" \" + (hrs+4) + \":\" + mins + \":\" + secs;",
                  "var passDeadlineDate = year + \"-\" + month + \"-\" + date + \" \" + (hrs+4) + \":\" + mins + \":\" + (secs+1);",
                  "",
                  "",
                  "pm.environment.set('deadlineDate', deadlineDate);",
                  "pm.environment.set('beforeDeadlineDate', beforeDeadlineDate);",
                  "pm.environment.set('scoreType', \"BEST\");",
                  "pm.environment.set('passDeadlineDate', passDeadlineDate);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "15238e4e-8517-4cf0-86d8-49a0ae3ecb25",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"created assignment\", function () {",
                  "    pm.response.to.have.status(202);",
                  "});",
                  "",
                  "var responseJson = pm.response.json();",
                  "pm.environment.set('assignmentId', responseJson.id);",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"lmsCourseId\": \"lmsCourse_{{courseId}}\",\n    \"title\": \"Course {{courseId}} Assignment\",\n    \"pointsPossible\": 100.0,\n    \"dueDate\": \"{{deadlineDate}}\",\n    \"sourceSystemCourseId\": \"{{courseId}}\",\n    \"scoreType\": \"{{scoreType}}\"\n}"
            },
            "url": "{{url}}/api/gradebook/assignments"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "af13273a-ab58-411c-b354-55024b2480b6",
      "name": "eols-template-service",
      "description": "",
      "item": [
        {
          "_postman_id": "798258f8-77a9-4315-bb03-f583de5724b3",
          "name": "getTokenByAdminLogin",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fd951f2c-7dcc-40c2-aef5-2968a1168bf8",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if(responseCode.code === 200){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"token\",jsonData.token);",
                  "    console.log(\"Response time in ms: \" + responseTime);",
                  "    console.log(\"Access Token: \" + jsonData.token);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"username\": \"eolsadmin\",\r\n   \"password\": \"testing1\"\r\n}"
            },
            "url": "{{url}}/login-service/login"
          },
          "response": [
            {
              "id": "6b722e34-b82a-4c22-852a-bca576937c46",
              "name": "token",
              "originalRequest": {
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": ""
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "description": "",
                  "key": "Access-Control-Allow-Credentials",
                  "name": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "description": "",
                  "key": "Access-Control-Allow-Origin",
                  "name": "Access-Control-Allow-Origin",
                  "value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop"
                },
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "keep-alive"
                },
                {
                  "description": "",
                  "key": "Content-Length",
                  "name": "Content-Length",
                  "value": "645"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json;charset=UTF-8"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Fri, 21 Apr 2017 15:29:10 GMT"
                },
                {
                  "description": "",
                  "key": "Server",
                  "name": "Server",
                  "value": "nginx/1.10.3"
                },
                {
                  "description": "",
                  "key": "X-Application-Context",
                  "name": "X-Application-Context",
                  "value": "eols-api-gateway-server:qa:8080"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\"token\":\"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJlb2xzYWRtaW4iLCJ1c2VyIjp7InVzZXJJZCI6bnVsbCwiZXh0ZXJuYWxJZCI6bnVsbCwidXNlcm5hbWUiOiJlb2xzYWRtaW4iLCJmaXJzdE5hbWUiOm51bGwsImxhc3ROYW1lIjpudWxsLCJyb2xlIjoiQWRtIiwiZXhwaXJlRGF0ZSI6MTQ5Mjc5MjE1MDc4Niwic2Vzc2lvbklkIjoiNmJlZTdkZGQtYmFlOC00MDJhLWExMWUtMDRlNWViM2NhNzVjIiwiZW1haWxBZGRyZXNzIjpudWxsLCJyb2xlcyI6W10sImFwcFBhcmFtcyI6e319LCJpc3MiOiJlb2xzIiwianRpIjoiNzA2ODU3NzQtYjcxNi00YTM0LWIxMDctZWZjZmNkMWRkMTZmIiwiaWF0IjoxNDkyNzg4NTUwLCJuYmYiOjE0OTI3ODg1NTAsImV4cCI6MTQ5Mjc5MjE1MH0.7-BAIMlP8WCid3uGA9RS_oTpX4MEDnPxREvqMjn6FtFtgyGblBjIM-3_itqrC5V582mADWTnDw6mWS1EwMGzPA\",\"expireDate\":1492792150786,\"cookies\":null}"
            }
          ]
        },
        {
          "_postman_id": "5cbe62a3-e714-4972-b210-6f5ed45b2939",
          "name": "getHtmlTemplate - Assessment",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "12a27992-ea9b-43b8-8564-a2bff28881a9",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "if(responseCode.code === 200){",
                  "    tests[\"Header displays Assessment\"] = responseBody.has(\"<h1>Assessment</h1>\");",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "1f501b6a-c160-44a4-8d66-0d0a4c6b33d6",
                "type": "text/javascript",
                "exec": [
                  "var payload = {\"vtwId\":\"skill_PF_001_assessment\",\"next\":\"skill_PF_001_implementation\",\"prev\":\"skill_PF_001_overview\",\"type\":\"assessment\",\"topic\":\"assessment\",\"sequenceIndex\":2,\"timeRemaining\":960,\"content\":{\"image\":\"http://qa.content.eols.io/skill/PF_001/A001.jpg\",\"assessment\":[{\"step\":\"Inspect the surface of your hands for breaks or cuts in the skin or around the cuticles.\",\"childList\":[]},{\"step\":\"Inspect your hands for visible soiling.\",\"childList\":[]},{\"step\":\"Inspect the condition of your nails. Natural tips should be no longer than 1/2 cm, or about 1/4 inch, long. Keep your fingernails short, filed, and smooth.\",\"childList\":[]}],\"supply\":[{\"item\":\"Antiseptic hand rub\",\"childItems\":[]},{\"item\":\"Alcohol-based waterless antiseptic containing emollients\",\"childItems\":[]},{\"item\":\"Hand washing    \",\"childItems\":[{\"item\":\"Easy-to-reach sink with warm running water\",\"childItems\":[]},{\"item\":\"Antimicrobial or regular soap\",\"childItems\":[]},{\"item\":\"Paper towels or air dryer\",\"childItems\":[]}]}],\"delegation\":[{\"step\":\"\",\"childList\":[]},{\"step\":\"The skill of hand hygiene cannot be delegated. It is performed by all caregivers. Tasks are delegated to nursing assistive personnel (NAP) who require appropriate hand hygiene. Be sure to inform NAP of the following:    \",\"childList\":[{\"step\":\"Choose an appropriate hand hygiene agent, such as soap or an alcohol-based sanitizer.\",\"childList\":[]},{\"step\":\"Clean the hands for 15 to 20 seconds.\",\"childList\":[]},{\"step\":\"Use warm water when using soap and water.\",\"childList\":[]}]}]},\"moduleVtwId\":null};",
                  "",
                  "postman.setEnvironmentVariable(\"sequenceChunk\", JSON.stringify( payload ).replace(/\"/g, \"\\\\\\\"\"));"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"actions\": \"NEXT\",\n\t\"currentContentId\": \"test title\",\n\t\"payload\": {},\n\t\"sequenceChunk\": \"{{sequenceChunk}}\",\n\t\"userId\": \"{{studentUserId2}}\"\n}"
            },
            "url": "{{url}}/api/template/skillTemplate/type/assessment"
          },
          "response": []
        },
        {
          "_postman_id": "cc4cb0a5-52c5-4f53-a3f2-d5cb038e6df9",
          "name": "getHtmlTemplate - Overview",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e3cc69f2-37e9-4af4-81b1-6fbfde6c2e6c",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "if(responseCode.code === 200){",
                  "    tests[\"Header displays Assessment\"] = responseBody.has(\"<h1>Overview</h1>\");",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "5de44ec9-d1bc-4df7-bd3b-4bbd942d11b4",
                "type": "text/javascript",
                "exec": [
                  "var payload = {\"vtwId\":\"skill_PF_001_overview\",\"next\":\"skill_PF_001_assessment\",\"prev\":null,\"type\":\"overview\",\"topic\":\"overview\",\"sequenceIndex\":1,\"timeRemaining\":1080,\"content\":{\"alert\":[{\"step\":\"Wash your hands with soap and water when your hands are visibly dirty or contaminated with proteinaceous material, blood, or other bodily fluids.\"},{\"step\":\"If your hands are not visibly soiled, use an alcohol-based hand rub.\"},{\"step\":\"Keep natural nails short.\"},{\"step\":\"Do not wear nail polish, long or artificial nails, or nail extenders.\"}],\"overview\":[{\"step\":\"The most important and basic technique in preventing and controlling transmission of infection is hand hygiene. Hand hygiene is a general term that applies to handwashing, antiseptic hand wash, antiseptic hand rub, or surgical hand antisepsis. Handwashing refers to washing hands with plain soap and water. An antiseptic hand wash is defined as washing hands with water and soap or other detergents containing an antiseptic agent. An antiseptic hand rub means applying an antiseptic hand rub product to all surfaces of the hands to reduce the number of microorganisms present. Surgical hand antisepsis is the use of an antiseptic hand wash or antiseptic hand rub before surgery by surgical personnel to eliminate transient and reduce resident hand flora. Antiseptic detergent preparations often have persistent antimicrobial activity.\",\"childList\":[]},{\"step\":\"The decision to perform hand hygiene depends on four factors: (1) the intensity or degree of contact with patients or contaminated objects, (2) the amount of contamination that may occur with the contact, (3) the patient or health care worker's susceptibility to infection, and (4) the procedure or activity to be performed:\",\"childList\":[]}]},\"moduleVtwId\":null};",
                  "",
                  "postman.setEnvironmentVariable(\"sequenceChunk\", JSON.stringify( payload ).replace(/\"/g, \"\\\\\\\"\"));",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"actions\": \"NEXT\",\n\t\"currentContentId\": \"test title\",\n\t\"payload\": {},\n\t\"sequenceChunk\": \"{{sequenceChunk}}\",\n\t\"userId\": \"{{studentUserId2}}\"\n}"
            },
            "url": "{{url}}/api/template/skillTemplate/type/overview"
          },
          "response": []
        },
        {
          "_postman_id": "0d7507d6-6b95-486b-80d3-8b4c230c3084",
          "name": "getHtmlTemplate - Evaluation",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1b2a5864-64c5-40d8-a923-6153e2a9cb15",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "if(responseCode.code === 200){",
                  "    tests[\"Header displays Assessment\"] = responseBody.has(\"<h1>Evaluation</h1>\");",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "53126149-0d04-4d78-bd71-5b60dd321949",
                "type": "text/javascript",
                "exec": [
                  "var payload = {\"vtwId\":\"skill_PF_001_evaluation\",\"next\":\"skill_PF_001_quicksheet\",\"prev\":\"skill_PF_001_implementation\",\"type\":\"evaluation\",\"topic\":\"evaluation\",\"sequenceIndex\":4,\"timeRemaining\":720,\"content\":{\"monitoring\":[{\"step\":\"Inspect the surface of your hands for obvious signs of dirt or other contaminants.\",\"childList\":[]}],\"expected\":[{\"step\":\"Hands and areas under fingernails are clean and free of debris.\",\"childList\":[]}],\"unexpected\":[{\"step\":\"Hands or areas under fingernails remain soiled.\",\"childList\":[]},{\"step\":\"Repeated use of soaps or antiseptics causes dermatitis or cracked skin.\",\"childList\":[]}],\"documentation\":{\"guideline\":[],\"sample\":[]},\"homeCare\":[{\"step\":\"Evaluate the patient and the primary caregiver to determine their understanding of the transmission of microorganisms and their ability and motivation to perform hand hygiene correctly.\",\"childList\":[]},{\"step\":\"Evaluate the hand hygiene facilities in the home to determine the possibility of contamination, proximity of the facilities to the patient, and the ability to maintain supplies and equipment.\",\"childList\":[]}]},\"moduleVtwId\":null};",
                  "",
                  "postman.setEnvironmentVariable(\"sequenceChunk\", JSON.stringify( payload ).replace(/\"/g, \"\\\\\\\"\"));",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"actions\": \"NEXT\",\n\t\"currentContentId\": \"test title\",\n\t\"payload\": {},\n\t\"sequenceChunk\": \"{{sequenceChunk}}\",\n\t\"userId\": \"{{studentUserId2}}\"\n}"
            },
            "url": "{{url}}/api/template/skillTemplate/type/evaluation"
          },
          "response": []
        },
        {
          "_postman_id": "b6b9eaa5-3442-46c0-8a05-8169642a8bc0",
          "name": "getHtmlTemplate -  Quicksheet",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0a3c4673-e313-4c35-9f26-fd0b087a4250",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "if(responseCode.code === 200){",
                  "    tests[\"Header displays Assessment\"] = responseBody.has(\"<h1>Quick Sheet</h1>\");",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "72aa2081-d6f7-42b5-af11-ccaf1c572838",
                "type": "text/javascript",
                "exec": [
                  "var payload = {\"next\":\"skill_54369\",\"vtwId\":\"skill_PF_001_quicksheet\",\"prev\":\"skill_PF_001_evaluation\",\"type\":\"quicksheet\",\"topic\":\"quicksheet\",\"sequenceIndex\":5,\"timeRemaining\":600,\"content\":{\"alert\":[{\"step\":\"Wash your hands with soap and water when your hands are visibly dirty or contaminated with proteinaceous material, blood, or other bodily fluids.\"},{\"step\":\"If your hands are not visibly soiled, use an alcohol-based hand rub.\"},{\"step\":\"Keep natural nails short.\"},{\"step\":\"Do not wear nail polish, long or artificial nails, or nail extenders.\"}],\"quicksheet\":[{\"step\":\"Push your wristwatch and long uniform sleeves above your wrists. If you are wearing rings, remove them before performing hand hygiene.\",\"childList\":[]},{\"step\":\"To use an antiseptic hand rub product:  \",\"childList\":[{\"step\":\"Dispense an ample amount of the product into the palm of one hand.\",\"childList\":[]},{\"step\":\"Rub your hands together, covering with antiseptic solution the palms and the back of your hands, interlocking your fingers, cleaning the thumb areas, and finishing with your wrists.\",\"childList\":[]},{\"step\":\"Rub your hands together until the alcohol is dry.\",\"childList\":[]},{\"step\":\"Allow your hands to dry completely before applying gloves.\",\"childList\":[]}]},{\"step\":\"Hand washing using antiseptic soap and water:  \",\"childList\":[{\"step\":\"Stand in front of a sink, keeping your hands and uniform away from the sink surface. If your hands touch the sink during hand washing, repeat the sequence.\",\"childList\":[]},{\"step\":\"Turn the faucet on, or push the knee pedals laterally, or press the pedals with your foot to regulate the flow and temperature of the water.\",\"childList\":[]},{\"step\":\"Avoid splashing water against your uniform.\",\"childList\":[]},{\"step\":\"Regulate the flow of water so that the temperature is warm.\",\"childList\":[]},{\"step\":\"Wet your hands and wrists thoroughly under the running water. Keep your hands and forearms lower than your elbows during washing.\",\"childList\":[]},{\"step\":\"Apply 3 to 5 mL of antiseptic soap, and rub your hands together.\",\"childList\":[]},{\"step\":\"Wash your hands, using plenty of lather and friction, for at least 15 to 30 sec. Interlace your fingers and rub your palms, including around the thumb area and the back of your hands, with a circular motion at least five times each. Keep your fingertips pointed down to facilitate the removal of microorganisms.\",\"childList\":[]},{\"step\":\"Areas underlying the fingernails are often soiled. Clean them with the fingernails of the other hand, using additional soap or a disposable nail cleaner.\",\"childList\":[]},{\"step\":\"Rinse your hands and wrists thoroughly, keeping your hands down and your elbows up.\",\"childList\":[]},{\"step\":\"Dry your hands thoroughly, from the fingers to the wrists, with a paper towel, a single-use cloth, or a warm-air dryer.\",\"childList\":[]},{\"step\":\"If you use a paper towel, discard it in the proper receptacle.\",\"childList\":[]},{\"step\":\"To turn off the hand faucet, use a clean, dry paper towel, making sure to avoid touching the faucet handles with your hands. Turn off the water with a foot or knee pedal if applicable.\",\"childList\":[]},{\"step\":\"Apply lotion to your hands. Use the facility-provided lotion if one has been provided. Avoid using petroleum-based lotions. Do not use lotion if you are going to be providing patient care immediately after washing.\",\"childList\":[]}]}]},\"moduleVtwId\":null};",
                  "",
                  "postman.setEnvironmentVariable(\"sequenceChunk\", JSON.stringify( payload ).replace(/\"/g, \"\\\\\\\"\"));",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"actions\": \"NEXT\",\n\t\"currentContentId\": \"test title\",\n\t\"payload\": {},\n\t\"sequenceChunk\": \"{{sequenceChunk}}\",\n\t\"userId\": \"{{studentUserId2}}\"\n}"
            },
            "url": "{{url}}/api/template/skillTemplate/type/quicksheet"
          },
          "response": []
        },
        {
          "_postman_id": "960b560d-5bdc-4c2e-9500-acfe6faf83c2",
          "name": "getHtmlTemplate -  Implementation",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8ef1bb48-8917-42e1-a5f6-fba22cb90fa4",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "if(responseCode.code === 200){",
                  "    tests[\"Header displays Assessment\"] = responseBody.has(\"<h1>Implementation</h1>\");",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "baefe6c2-bf11-408a-ad74-db4588b48309",
                "type": "text/javascript",
                "exec": [
                  "var payload = {\"vtwId\":\"skill_PF_001_implementation\",\"next\":\"skill_PF_001_evaluation\",\"prev\":\"skill_PF_001_assessment\",\"type\":\"implementation\",\"topic\":\"implementation\",\"sequenceIndex\":3,\"timeRemaining\":840,\"content\":{\"procedure\":[{\"step\":\"Push your wristwatch and long uniform sleeves above your wrists. If you are wearing rings, remove them before performing hand hygiene.\",\"childList\":[]},{\"step\":\"To use an antiseptic hand rub product:  \",\"childList\":[{\"step\":\"Dispense an ample amount of the product into the palm of one hand.\",\"childList\":[]},{\"step\":\"Rub your hands together, covering with antiseptic solution the palms and the back of your hands, interlocking your fingers, cleaning the thumb areas, and finishing with your wrists.\",\"childList\":[]},{\"step\":\"Rub your hands together until the alcohol is dry.\",\"childList\":[]},{\"step\":\"Allow your hands to dry completely before applying gloves.\",\"childList\":[]}]},{\"step\":\"Hand washing using antiseptic soap and water:  \",\"childList\":[{\"step\":\"Stand in front of a sink, keeping your hands and uniform away from the sink surface. If your hands touch the sink during hand washing, repeat the sequence.\",\"childList\":[]},{\"step\":\"Turn the faucet on, or push the knee pedals laterally, or press the pedals with your foot to regulate the flow and temperature of the water.\",\"childList\":[]},{\"step\":\"Avoid splashing water against your uniform.\",\"childList\":[]},{\"step\":\"Regulate the flow of water so that the temperature is warm.\",\"childList\":[]},{\"step\":\"Wet your hands and wrists thoroughly under the running water. Keep your hands and forearms lower than your elbows during washing.\",\"childList\":[]},{\"step\":\"Apply 3 to 5 mL of antiseptic soap, and rub your hands together.\",\"childList\":[]},{\"step\":\"Wash your hands, using plenty of lather and friction, for at least 15 to 30 sec. Interlace your fingers and rub your palms, including around the thumb area and the back of your hands, with a circular motion at least five times each. Keep your fingertips pointed down to facilitate the removal of microorganisms.\",\"childList\":[]},{\"step\":\"Areas underlying the fingernails are often soiled. Clean them with the fingernails of the other hand, using additional soap or a disposable nail cleaner.\",\"childList\":[]},{\"step\":\"Rinse your hands and wrists thoroughly, keeping your hands down and your elbows up.\",\"childList\":[]},{\"step\":\"Dry your hands thoroughly, from the fingers to the wrists, with a paper towel, a single-use cloth, or a warm-air dryer.\",\"childList\":[]},{\"step\":\"If you use a paper towel, discard it in the proper receptacle.\",\"childList\":[]},{\"step\":\"To turn off the hand faucet, use a clean, dry paper towel, making sure to avoid touching the faucet handles with your hands. Turn off the water with a foot or knee pedal if applicable.\",\"childList\":[]},{\"step\":\"Apply lotion to your hands. Use the facility-provided lotion if one has been provided. Avoid using petroleum-based lotions. Do not use lotion if you are going to be providing patient care immediately after washing.\",\"childList\":[]}]}],\"videoId\":\"4666134161001\"},\"moduleVtwId\":null};",
                  "",
                  "postman.setEnvironmentVariable(\"sequenceChunk\", JSON.stringify( payload ).replace(/\"/g, \"\\\\\\\"\"));",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"actions\": \"NEXT\",\n\t\"currentContentId\": \"test title\",\n\t\"payload\": {},\n\t\"sequenceChunk\": \"{{sequenceChunk}}\",\n\t\"userId\": \"{{studentUserId2}}\"\n}"
            },
            "url": "{{url}}/api/template/skillTemplate/type/implementation"
          },
          "response": []
        },
        {
          "_postman_id": "55785eb0-7fff-4af4-ba00-f75620fa2a58",
          "name": "getHtmlTemplate - Mismatch URL",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c6fb3f94-9ac5-44f3-b67a-472389b62a6e",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 500\", function () {",
                  "    pm.response.to.have.status(500);",
                  "});"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "baefe6c2-bf11-408a-ad74-db4588b48309",
                "type": "text/javascript",
                "exec": [
                  "var payload = {\"vtwId\":\"skill_PF_001_implementation\",\"next\":\"skill_PF_001_evaluation\",\"prev\":\"skill_PF_001_assessment\",\"type\":\"implementation\",\"topic\":\"implementation\",\"sequenceIndex\":3,\"timeRemaining\":840,\"content\":{\"procedure\":[{\"step\":\"Push your wristwatch and long uniform sleeves above your wrists. If you are wearing rings, remove them before performing hand hygiene.\",\"childList\":[]},{\"step\":\"To use an antiseptic hand rub product:  \",\"childList\":[{\"step\":\"Dispense an ample amount of the product into the palm of one hand.\",\"childList\":[]},{\"step\":\"Rub your hands together, covering with antiseptic solution the palms and the back of your hands, interlocking your fingers, cleaning the thumb areas, and finishing with your wrists.\",\"childList\":[]},{\"step\":\"Rub your hands together until the alcohol is dry.\",\"childList\":[]},{\"step\":\"Allow your hands to dry completely before applying gloves.\",\"childList\":[]}]},{\"step\":\"Hand washing using antiseptic soap and water:  \",\"childList\":[{\"step\":\"Stand in front of a sink, keeping your hands and uniform away from the sink surface. If your hands touch the sink during hand washing, repeat the sequence.\",\"childList\":[]},{\"step\":\"Turn the faucet on, or push the knee pedals laterally, or press the pedals with your foot to regulate the flow and temperature of the water.\",\"childList\":[]},{\"step\":\"Avoid splashing water against your uniform.\",\"childList\":[]},{\"step\":\"Regulate the flow of water so that the temperature is warm.\",\"childList\":[]},{\"step\":\"Wet your hands and wrists thoroughly under the running water. Keep your hands and forearms lower than your elbows during washing.\",\"childList\":[]},{\"step\":\"Apply 3 to 5 mL of antiseptic soap, and rub your hands together.\",\"childList\":[]},{\"step\":\"Wash your hands, using plenty of lather and friction, for at least 15 to 30 sec. Interlace your fingers and rub your palms, including around the thumb area and the back of your hands, with a circular motion at least five times each. Keep your fingertips pointed down to facilitate the removal of microorganisms.\",\"childList\":[]},{\"step\":\"Areas underlying the fingernails are often soiled. Clean them with the fingernails of the other hand, using additional soap or a disposable nail cleaner.\",\"childList\":[]},{\"step\":\"Rinse your hands and wrists thoroughly, keeping your hands down and your elbows up.\",\"childList\":[]},{\"step\":\"Dry your hands thoroughly, from the fingers to the wrists, with a paper towel, a single-use cloth, or a warm-air dryer.\",\"childList\":[]},{\"step\":\"If you use a paper towel, discard it in the proper receptacle.\",\"childList\":[]},{\"step\":\"To turn off the hand faucet, use a clean, dry paper towel, making sure to avoid touching the faucet handles with your hands. Turn off the water with a foot or knee pedal if applicable.\",\"childList\":[]},{\"step\":\"Apply lotion to your hands. Use the facility-provided lotion if one has been provided. Avoid using petroleum-based lotions. Do not use lotion if you are going to be providing patient care immediately after washing.\",\"childList\":[]}]}],\"videoId\":\"4666134161001\"},\"moduleVtwId\":null};",
                  "",
                  "postman.setEnvironmentVariable(\"sequenceChunk\", JSON.stringify( payload ).replace(/\"/g, \"\\\\\\\"\"));",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"actions\": \"foi\",\n\t\"currentContentId\": \"test title\",\n\t\"payload\": {},\n\t\"sequenceChunk\": \"{{sequenceChunk}}\",\n\t\"userId\": \"asdf\"\n}"
            },
            "url": "{{url}}/api/template/skillTemplate/type/assessment"
          },
          "response": []
        },
        {
          "_postman_id": "e6d2bb58-1a79-4eba-9f65-4e5a9f01331f",
          "name": "getHtmlTemplate - 404",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "55c2b98e-c21b-4045-927a-e54a27a7b3e3",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 404\", function () {",
                  "    pm.response.to.have.status(404);",
                  "});"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "baefe6c2-bf11-408a-ad74-db4588b48309",
                "type": "text/javascript",
                "exec": [
                  "var payload = {\"vtwId\":\"skill_PF_001_implementation\",\"next\":\"skill_PF_001_evaluation\",\"prev\":\"skill_PF_001_assessment\",\"type\":\"implementation\",\"topic\":\"implementation\",\"sequenceIndex\":3,\"timeRemaining\":840,\"content\":{\"procedure\":[{\"step\":\"Push your wristwatch and long uniform sleeves above your wrists. If you are wearing rings, remove them before performing hand hygiene.\",\"childList\":[]},{\"step\":\"To use an antiseptic hand rub product:  \",\"childList\":[{\"step\":\"Dispense an ample amount of the product into the palm of one hand.\",\"childList\":[]},{\"step\":\"Rub your hands together, covering with antiseptic solution the palms and the back of your hands, interlocking your fingers, cleaning the thumb areas, and finishing with your wrists.\",\"childList\":[]},{\"step\":\"Rub your hands together until the alcohol is dry.\",\"childList\":[]},{\"step\":\"Allow your hands to dry completely before applying gloves.\",\"childList\":[]}]},{\"step\":\"Hand washing using antiseptic soap and water:  \",\"childList\":[{\"step\":\"Stand in front of a sink, keeping your hands and uniform away from the sink surface. If your hands touch the sink during hand washing, repeat the sequence.\",\"childList\":[]},{\"step\":\"Turn the faucet on, or push the knee pedals laterally, or press the pedals with your foot to regulate the flow and temperature of the water.\",\"childList\":[]},{\"step\":\"Avoid splashing water against your uniform.\",\"childList\":[]},{\"step\":\"Regulate the flow of water so that the temperature is warm.\",\"childList\":[]},{\"step\":\"Wet your hands and wrists thoroughly under the running water. Keep your hands and forearms lower than your elbows during washing.\",\"childList\":[]},{\"step\":\"Apply 3 to 5 mL of antiseptic soap, and rub your hands together.\",\"childList\":[]},{\"step\":\"Wash your hands, using plenty of lather and friction, for at least 15 to 30 sec. Interlace your fingers and rub your palms, including around the thumb area and the back of your hands, with a circular motion at least five times each. Keep your fingertips pointed down to facilitate the removal of microorganisms.\",\"childList\":[]},{\"step\":\"Areas underlying the fingernails are often soiled. Clean them with the fingernails of the other hand, using additional soap or a disposable nail cleaner.\",\"childList\":[]},{\"step\":\"Rinse your hands and wrists thoroughly, keeping your hands down and your elbows up.\",\"childList\":[]},{\"step\":\"Dry your hands thoroughly, from the fingers to the wrists, with a paper towel, a single-use cloth, or a warm-air dryer.\",\"childList\":[]},{\"step\":\"If you use a paper towel, discard it in the proper receptacle.\",\"childList\":[]},{\"step\":\"To turn off the hand faucet, use a clean, dry paper towel, making sure to avoid touching the faucet handles with your hands. Turn off the water with a foot or knee pedal if applicable.\",\"childList\":[]},{\"step\":\"Apply lotion to your hands. Use the facility-provided lotion if one has been provided. Avoid using petroleum-based lotions. Do not use lotion if you are going to be providing patient care immediately after washing.\",\"childList\":[]}]}],\"videoId\":\"4666134161001\"},\"moduleVtwId\":null};",
                  "",
                  "postman.setEnvironmentVariable(\"sequenceChunk\", JSON.stringify( payload ).replace(/\"/g, \"\\\\\\\"\"));",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"actions\": \"foi\",\n\t\"currentContentId\": \"test title\",\n\t\"payload\": {},\n\t\"sequenceChunk\": \"{{sequenceChunk}}\",\n\t\"userId\": \"asdf\"\n}"
            },
            "url": "{{url}}/api/template/skillTemplate/type/assessmen"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "17987749-4780-4500-957e-a550294c284f",
      "name": "eols-oauth2-service",
      "description": "",
      "item": [
        {
          "_postman_id": "3b288474-8c27-40f7-8870-67fcdfded986",
          "name": "getToken",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a26c7fb7-740f-4c7c-872f-650f092f8b2f",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "tests[\"Response time is less than 500ms\"] = responseTime < 500;",
                  "",
                  "console.log(\"Response time in ms: \" + responseTime);",
                  "",
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"token\",jsonData.access_token);"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "grant_type=client_credentials&client_id=devas95668b-5adfdc-b93a0-b4dfa-778cb3466dev&client_secret=devsecret"
            },
            "url": "{{url}}/oauth2/token"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "559ba8c8-57db-408a-bc8e-ee758bfca8b4",
      "name": "eols-oauth-service",
      "description": "",
      "item": [
        {
          "_postman_id": "2928ba07-905e-4595-add6-51d816fcee88",
          "name": "oauthLaunch-Sherpath",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "698aba65-4101-4062-8b37-8d7184b0ce2a",
                "type": "text/javascript",
                "exec": [
                  "var retry = pm.environment.get(\"retry\") || \"true\";",
                  "",
                  "pm.test(\"Successful LTI Launch\", function() {",
                  "    if (pm.response.code == 500 && retry) {",
                  "        pm.environment.set(\"retry\", false);",
                  "        postman.setNextRequest('oauthLaunch-Sherpath');",
                  "    } else {",
                  "        pm.environment.unset(\"retry\");",
                  "        pm.response.to.have.status(302);",
                  "    }",
                  "});",
                  "",
                  "",
                  "pm.test(\"Don't redirect to error page\", function() {",
                  "    pm.expect(postman.getResponseHeader(\"Location\")).to.not.contain(\"/#/error\");",
                  "});",
                  "",
                  "pm.test(\"Validate Course and User were created\", function() {",
                  "    const location = postman.getResponseHeader(\"Location\");",
                  "    const requestParams = location.split('?')[1].split('&');",
                  "",
                  "    paramMap = {};",
                  "    requestParams.forEach(a => paramMap[a.split('=')[0]] = a.split('=')[1]);",
                  "",
                  "    const JwtToken = paramMap.token;",
                  "",
                  "    function parseJwt(token) {",
                  "        var base64Url = token.split('.')[1];",
                  "        var base64 = base64Url.replace('-', '+').replace('_', '/');",
                  "        return JSON.parse(atob(base64));",
                  "    }",
                  "",
                  "    const token = parseJwt(JwtToken);",
                  "    pm.environment.set(\"course_section_id\", token.user.appParams.courseId);",
                  "    pm.environment.set(\"eols_user_id\", token.user.userId);",
                  "    pm.environment.set(\"launchUrl_Sherpath\", location);",
                  "    postman.setNextRequest(\"launchCourse-Sherpath\");",
                  "});"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "7fe42b93-f5c6-486a-8d68-4d9a18cf8c64",
                "type": "text/javascript",
                "exec": [
                  "var myInt = pm.environment.get(\"my_int\") || Math.floor(Math.random() * 10000);",
                  "pm.environment.set(\"my_int\", myInt);"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "oauth1",
              "oauth1": {
                "consumerKey": "keycanvas",
                "timestamp": "{{$timestamp}}",
                "nonce": "{{$randomInt}}",
                "addParamsToHeader": false,
                "tokenSecret": "",
                "signatureMethod": "HMAC-SHA1",
                "consumerSecret": "secret",
                "version": "1.0",
                "addEmptyParamsToSign": false
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "X-Forwarded-For",
                "value": "198.176.81.34, 172.16.0.1, 172.16.142.1"
              },
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "Accept",
                "value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8"
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "description": "",
                  "key": "context_id",
                  "type": "text",
                  "value": "made_up_number_{{$randomInt}}",
                  "warning": ""
                },
                {
                  "description": "",
                  "key": "context_label",
                  "type": "text",
                  "value": "SHC-{{env}}-9780323474207",
                  "warning": ""
                },
                {
                  "description": "",
                  "key": "context_title",
                  "type": "text",
                  "value": "SHC-{{env}}-9780323474207",
                  "warning": ""
                },
                {
                  "description": "",
                  "key": "custom_collection_id",
                  "type": "text",
                  "value": "9780323398824",
                  "warning": ""
                },
                {
                  "description": "",
                  "key": "custom_context_id",
                  "type": "text",
                  "value": "3d031b7ad237289c81ec7e6c89c52437df77da38",
                  "warning": ""
                },
                {
                  "description": "",
                  "key": "custom_user_id",
                  "type": "text",
                  "value": "custom_user_id_{{my_int}}",
                  "warning": ""
                },
                {
                  "description": "",
                  "key": "ext_launch_presentation_css_url",
                  "type": "text",
                  "value": "https://bb.csub.edu/common/shared.css,https://bb.csub.edu/themes/as_2012/theme.css,https://bb.csub.edu/coursethemes/medicine/coursetheme.css",
                  "warning": ""
                },
                {
                  "description": "",
                  "key": "ext_lms",
                  "type": "text",
                  "value": "bb-9.1.201404.160205",
                  "warning": ""
                },
                {
                  "description": "",
                  "key": "launch_presentation_document_target",
                  "type": "text",
                  "value": "window",
                  "warning": ""
                },
                {
                  "description": "",
                  "key": "launch_presentation_locale",
                  "type": "text",
                  "value": "en-US",
                  "warning": ""
                },
                {
                  "description": "",
                  "key": "launch_presentation_return_url",
                  "type": "text",
                  "value": "https://bb.csub.edu/webapps/blackboard/execute/blti/launchReturn?course_id:_13041_1&content_id:_630542_1&toGC:false",
                  "warning": ""
                },
                {
                  "description": "",
                  "key": "lis_outcome_service_url",
                  "type": "text",
                  "value": "https://bb.csub.edu/webapps/gradebook/lti11grade",
                  "warning": ""
                },
                {
                  "description": "",
                  "key": "lis_person_contact_email_primary",
                  "type": "text",
                  "value": "finstructor001@mailinator.com",
                  "warning": ""
                },
                {
                  "description": "",
                  "key": "lis_person_name_family",
                  "type": "text",
                  "value": "One",
                  "warning": ""
                },
                {
                  "description": "",
                  "key": "lis_person_name_full",
                  "type": "text",
                  "value": "Instructor One",
                  "warning": ""
                },
                {
                  "description": "",
                  "key": "lis_person_name_given",
                  "type": "text",
                  "value": "Instructor",
                  "warning": ""
                },
                {
                  "description": "",
                  "key": "lti_message_type",
                  "type": "text",
                  "value": "basic-lti-launch-request",
                  "warning": ""
                },
                {
                  "description": "",
                  "key": "lti_version",
                  "type": "text",
                  "value": "LTI-1p0",
                  "warning": ""
                },
                {
                  "description": "",
                  "key": "resource_link_description",
                  "type": "text",
                  "value": "?",
                  "warning": ""
                },
                {
                  "description": "",
                  "key": "resource_link_id",
                  "type": "text",
                  "value": "559bcc7ca2e6dbbf74a63ea4f5c5e671a24eafe7",
                  "warning": ""
                },
                {
                  "description": "",
                  "key": "resource_link_title",
                  "type": "text",
                  "value": "Sherpath for Pharmacology",
                  "warning": ""
                },
                {
                  "description": "",
                  "key": "roles",
                  "type": "text",
                  "value": "urn:lti:role:ims/lis/Instructor",
                  "warning": ""
                },
                {
                  "description": "",
                  "key": "tool_consumer_info_product_family_code",
                  "type": "text",
                  "value": "canvas",
                  "warning": ""
                },
                {
                  "description": "",
                  "key": "tool_consumer_info_version",
                  "type": "text",
                  "value": "cloud",
                  "warning": ""
                },
                {
                  "description": "",
                  "key": "tool_consumer_instance_contact_email",
                  "type": "text",
                  "value": "notifications@instructure.com",
                  "warning": ""
                },
                {
                  "description": "",
                  "key": "tool_consumer_instance_guid",
                  "type": "text",
                  "value": "07adb3e60637ff02d9ea11c7c74f1ca921699bd7.canvas.instructure.com",
                  "warning": ""
                },
                {
                  "description": "",
                  "key": "tool_consumer_instance_name",
                  "type": "text",
                  "value": "Free For Teachers",
                  "warning": ""
                },
                {
                  "description": "",
                  "key": "user_id",
                  "type": "text",
                  "value": "1e733404476a6e4346065b6619900734d978fdc4",
                  "warning": ""
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "type": "text",
                  "value": "application/x-www-form-urlencoded",
                  "warning": ""
                },
                {
                  "description": "",
                  "key": "collection_id",
                  "type": "text",
                  "value": "9780323398824",
                  "warning": ""
                }
              ]
            },
            "url": "{{url}}/oauth/launch"
          },
          "response": []
        },
        {
          "_postman_id": "dbba544f-1533-4026-82f7-da948f6c406f",
          "name": "launchCourse-Sherpath",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c524cd52-ab82-40e4-a25f-1d095d4640d2",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Received status code 200\", pm.response.to.have.status(200));"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "d71918a0-7302-476b-81bb-4f0fc1af33d2",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/html"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "{{launchUrl_Sherpath}}"
          },
          "response": []
        },
        {
          "_postman_id": "e1c4b4da-cbcc-4962-a453-f94426b512e5",
          "name": "oauthHeader",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b3566dff-4dd0-4dd9-930c-c4bde1622633",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Response code 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": {
                "token": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIwN2FkYjNlNjA2MzdmZjAyZDllYTExYzdjNzRmMWNhOTIxNjk5YmQ3LmNhbnZhcy5pbnN0cnVjdHVyZS5jb20tMWU3MzM0MDQ0NzZhNmU0MzQ2MDY1YjY2MTk5MDA3MzRkOTc4ZmRjNCIsInVzZXIiOnsidXNlcklkIjoxMDk2NDksImV4dGVybmFsSWQiOiIwN2FkYjNlNjA2MzdmZjAyZDllYTExYzdjNzRmMWNhOTIxNjk5YmQ3LmNhbnZhcy5pbnN0cnVjdHVyZS5jb20tMWU3MzM0MDQ0NzZhNmU0MzQ2MDY1YjY2MTk5MDA3MzRkOTc4ZmRjNCIsInVzZXJuYW1lIjoiMDdhZGIzZTYwNjM3ZmYwMmQ5ZWExMWM3Yzc0ZjFjYTkyMTY5OWJkNy5jYW52YXMuaW5zdHJ1Y3R1cmUuY29tLTFlNzMzNDA0NDc2YTZlNDM0NjA2NWI2NjE5OTAwNzM0ZDk3OGZkYzQiLCJmaXJzdE5hbWUiOiJJbnN0cnVjdG9yIiwibGFzdE5hbWUiOiJPbmUiLCJyb2xlIjoiSW5zIiwiZXhwaXJlRGF0ZSI6MTUyNTQzNDM5MjIxNiwic2Vzc2lvbklkIjoiOGEzN2JmMTQtMjQ3Ny00ZTk3LWFmYzUtMWFhMjUyNjg2OTA2IiwiZW1haWxBZGRyZXNzIjoiaW5zMDAxQG1haWxpbmF0b3IuY29tIiwicm9sZXMiOltdLCJhcHBQYXJhbXMiOnsiaXNibnMiOiI5NzgwMzIzNDQ2NDMzIiwiYXBwSWQiOiJuY28iLCJjb3Vyc2VJZCI6OTgwMDAsImF1dGhvcml6ZWRJc2JucyI6Ijk3ODAzMjM0NDY0MzMifX0sImlzcyI6ImVvbHMiLCJqdGkiOiJmMGZhOTUzZS1lM2Q4LTQ5MjEtOGM1My03YzYwMzVhZTc3MDkiLCJpYXQiOjE1MjU0MzA3OTIsIm5iZiI6MTUyNTQzMDc5MiwiZXhwIjoxNTI1NDM0MzkyfQ.K6weBDe6_xRUi0A0VsXAuxWuKAsKCbN3t5Ky85f6DqDFFCQnyIU66q83EgHBkuFm7HKvknuRGvk3vuHH0Pt-2Q"
              }
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-Forwarded-For",
                "value": "198.176.81.34, 172.16.0.1, 172.16.142.1"
              },
              {
                "key": "A",
                "value": "",
                "disabled": true
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"consumerKey\":\"keycanvas123\",\n  \"consumerSecret\":\"secret\"\n}"
            },
            "url": {
              "raw": "{{url}}/oauth/header/keycanvas?url=https%3A%2F%2Fcanvas.instructure.com",
              "host": [
                "{{url}}"
              ],
              "path": [
                "oauth",
                "header",
                "keycanvas"
              ],
              "query": [
                {
                  "key": "url",
                  "value": "https%3A%2F%2Fcanvas.instructure.com",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "6960e7f6-450a-4c6b-822e-32e18f73225f",
      "name": "eols-lti-management-service",
      "description": "",
      "item": [
        {
          "_postman_id": "cf47b2a0-3d28-4e8b-a003-22ab6ed51d84",
          "name": "getToken",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a26c7fb7-740f-4c7c-872f-650f092f8b2f",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "tests[\"Response time is less than 500ms\"] = responseTime < 500;",
                  "",
                  "console.log(\"Response time in ms: \" + responseTime);",
                  "",
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"token\",jsonData.access_token);"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "grant_type=client_credentials&client_id=devas95668b-5adfdc-b93a0-b4dfa-778cb3466dev&client_secret=devsecret"
            },
            "url": "{{url}}/oauth2/token"
          },
          "response": []
        },
        {
          "_postman_id": "e330bb19-68e8-4928-959c-a55a713322a0",
          "name": "getTokenByAdminLogin",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "console.log(request.name);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if(responseCode.code === 200){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"anonymousToken\",jsonData.token);",
                  "   console.log(\"Response time in ms: \" + responseTime);",
                  "   console.log(\"Access Token: \" + jsonData.token);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"username\": \"eolsadmin\",\r\n   \"password\": \"testing1\"\r\n}"
            },
            "url": "{{url}}/login-service/login"
          },
          "response": [
            {
              "id": "3f19e1e5-2481-4ace-ba60-510616f7ad63",
              "name": "token",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"username\": \"eolsadmin\",\r\n   \"password\": \"testing1\"\r\n}"
                },
                "url": "{{url}}/login-service/login"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "description": "",
                  "key": "Access-Control-Allow-Credentials",
                  "name": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "description": "",
                  "key": "Access-Control-Allow-Origin",
                  "name": "Access-Control-Allow-Origin",
                  "value": "chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop"
                },
                {
                  "description": "",
                  "key": "Connection",
                  "name": "Connection",
                  "value": "keep-alive"
                },
                {
                  "description": "",
                  "key": "Content-Length",
                  "name": "Content-Length",
                  "value": "645"
                },
                {
                  "description": "",
                  "key": "Content-Type",
                  "name": "Content-Type",
                  "value": "application/json;charset=UTF-8"
                },
                {
                  "description": "",
                  "key": "Date",
                  "name": "Date",
                  "value": "Fri, 21 Apr 2017 15:29:10 GMT"
                },
                {
                  "description": "",
                  "key": "Server",
                  "name": "Server",
                  "value": "nginx/1.10.3"
                },
                {
                  "description": "",
                  "key": "X-Application-Context",
                  "name": "X-Application-Context",
                  "value": "eols-api-gateway-server:qa:8080"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\"token\":\"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJlb2xzYWRtaW4iLCJ1c2VyIjp7InVzZXJJZCI6bnVsbCwiZXh0ZXJuYWxJZCI6bnVsbCwidXNlcm5hbWUiOiJlb2xzYWRtaW4iLCJmaXJzdE5hbWUiOm51bGwsImxhc3ROYW1lIjpudWxsLCJyb2xlIjoiQWRtIiwiZXhwaXJlRGF0ZSI6MTQ5Mjc5MjE1MDc4Niwic2Vzc2lvbklkIjoiNmJlZTdkZGQtYmFlOC00MDJhLWExMWUtMDRlNWViM2NhNzVjIiwiZW1haWxBZGRyZXNzIjpudWxsLCJyb2xlcyI6W10sImFwcFBhcmFtcyI6e319LCJpc3MiOiJlb2xzIiwianRpIjoiNzA2ODU3NzQtYjcxNi00YTM0LWIxMDctZWZjZmNkMWRkMTZmIiwiaWF0IjoxNDkyNzg4NTUwLCJuYmYiOjE0OTI3ODg1NTAsImV4cCI6MTQ5Mjc5MjE1MH0.7-BAIMlP8WCid3uGA9RS_oTpX4MEDnPxREvqMjn6FtFtgyGblBjIM-3_itqrC5V582mADWTnDw6mWS1EwMGzPA\",\"expireDate\":1492792150786,\"cookies\":null}"
            }
          ]
        },
        {
          "_postman_id": "85a2b708-04cb-4687-85ca-1e34b25404fc",
          "name": "createCourse",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "console.log(request.name);",
                  "var randomNumber = Math.floor(Math.random()*9999999);",
                  "postman.setEnvironmentVariable(\"randomCourseNumber\", randomNumber);"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if(responseCode.code === 200){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"courseSectionId\",jsonData.id);",
                  "    postman.setEnvironmentVariable(\"courseId\",jsonData.courseId);",
                  "    postman.setEnvironmentVariable(\"courseExternalId\",jsonData.externalId);",
                  "    postman.setEnvironmentVariable(\"courseLmsClientId\",jsonData.lmsClientId);",
                  "    postman.setEnvironmentVariable(\"courseLmsExternalId\",jsonData.lmsExternalId);",
                  "    postman.setEnvironmentVariable(\"courseName\",jsonData.courseName);",
                  "    console.log(\"Response time in ms: \" + responseTime);",
                  "    console.log(\"Course Section Id: \" + jsonData.id);",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{anonymousToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"courseId\": \"10MPR23XKKZ\",\r\n   \"externalId\": \"{{randomCourseNumber}}\",\r\n   \"lmsClientId\": \"existingCourse\",\r\n   \"consumerKey\": \"existingCourse\",\r\n   \"lmsExternalId\": \"{{randomCourseNumber}}\",\r\n   \"courseName\": \"Existing Course In LO\",\r\n   \"sectionName\": null,\r\n   \"duration\": null,\r\n   \"courseActive\": true,\r\n \"entitlements\": [{\r\n    \"isbn\": \"9780323398817\",\r\n    \"type\": \"COLLECTION\",\r\n    \"data\": \"{\\\"components\\\":[{\\\"vbId\\\":\\\"9780323327404\\\",\\\"components\\\":[],\\\"isbn\\\":\\\"9780323481205\\\",\\\"eeoISBN\\\":\\\"9780323400053\\\",\\\"productTypeName\\\":\\\"Sherpath - eBook - Component - NSS\\\",\\\"productTypeKey\\\":\\\"sherpath_ebook_component_nss\\\",\\\"title\\\":\\\"PART - Sherpath - Fundamentals of Nursing - Elsevier eBook on VitalSource\\\",\\\"type\\\":\\\"ebook\\\"},{\\\"components\\\":[],\\\"isbn\\\":\\\"9780323481199\\\",\\\"productTypeName\\\":\\\"Sherpath - Component - NSS\\\",\\\"productTypeKey\\\":\\\"sherpath_component_nss\\\",\\\"title\\\":\\\"PART - Sherpath for Fundamentals (Potter Fundamentals Version)\\\",\\\"type\\\":\\\"eproduct\\\"}],\\\"isbn\\\":\\\"9780323398817\\\",\\\"productTypeName\\\":\\\"Sherpath\\\",\\\"productTypeKey\\\":\\\"sherpath_ia\\\",\\\"title\\\":\\\"Sherpath for Fundamentals (Potter Fundamentals Version)\\\",\\\"type\\\":\\\"\\\"}\"\r\n  },\r\n  {\r\n  \r\n    \"isbn\": \"9780323481205\",\r\n    \"type\": \"EBOOK\",\r\n    \"data\": \"{\\\"vbId\\\":\\\"9780323327404\\\",\\\"components\\\":[],\\\"isbn\\\":\\\"9780323481205\\\",\\\"eeoISBN\\\":\\\"9780323400053\\\",\\\"productTypeName\\\":\\\"Sherpath - eBook - Component - NSS\\\",\\\"productTypeKey\\\":\\\"sherpath_ebook_component_nss\\\",\\\"title\\\":\\\"PART - Sherpath - Fundamentals of Nursing - Elsevier eBook on VitalSource\\\",\\\"type\\\":\\\"ebook\\\"}\"\r\n  },\r\n  {\r\n  \r\n    \"isbn\": \"9780323481199\",\r\n    \"type\": \"EPRODUCT\",\r\n    \"data\": \"{\\\"components\\\":[],\\\"isbn\\\":\\\"9780323481199\\\",\\\"productTypeName\\\":\\\"Sherpath - Component - NSS\\\",\\\"productTypeKey\\\":\\\"sherpath_component_nss\\\",\\\"title\\\":\\\"PART - Sherpath for Fundamentals (Potter Fundamentals Version)\\\",\\\"type\\\":\\\"eproduct\\\"}\"\r\n  }],\r\n   \"role\": \"ACTIVE\",\r\n   \"locked\": null,\r\n   \"copied\": null,\r\n   \"institution\":{\r\n     \"id\": 1\r\n   }\r\n}"
            },
            "url": "{{url}}/api/courseSections"
          },
          "response": []
        },
        {
          "_postman_id": "acc9b09a-1b17-4d3b-9b0c-7e42a13498d2",
          "name": "createAssignment",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6701e0ba-8259-437c-864e-15a58dc4b06d",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "tests[\"Response time is less than 500ms\"] = responseTime < 500;",
                  "",
                  "console.log(\"Response time in ms: \" + responseTime);"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "8edd9280-8494-4903-beb8-5d965bd4d254",
                "type": "text/javascript",
                "exec": [
                  "var today = new Date();",
                  "var tomorrow = new Date();",
                  "tomorrow.setDate(today.getDate()+1);",
                  "var day = tomorrow.getDay();",
                  "var mon = tomorrow.getMonth();",
                  "var yea = tomorrow.getFullYear();",
                  "var hou = tomorrow.getHours();",
                  "var min = tomorrow.getMinutes();",
                  "var sec = tomorrow.getSeconds();",
                  "formatted = yea+\"-\"+mon+\"-\"+day+\" \"+hou+\":\"+min+\":\"+sec",
                  "console.log(formatted)",
                  "postman.setEnvironmentVariable(\"dueDate\", formatted);"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"assignmentTitle\":\"Overview of the Nursing Process\",\n  \"dueDate\":\"{{dueDate}}\",\n  \"elsAssignmentGuid\":\"10LDXJXF86Q\",\n  \"elsCourseId\":\"{{courseId}}\",\n  \"elsUserId\":\"{{eolsStudentUserId1}}\",\n  \"lmsCourseId\":\"{{lmsCourseId1}}\",\n  \"lmsClientId\":\"canvas.qa\",\n  \"pointsPossible\":\"{{pointsPossible}}\"\n}"
            },
            "url": "{{url}}/api/courseManagement/assignments"
          },
          "response": []
        },
        {
          "_postman_id": "4d37b448-febe-40b8-afce-d56111631748",
          "name": "postAssignmentOutcomes",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5f9b678f-4dce-4673-8d4e-ae2d19432626",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "tests[\"Response time is \" + responseTime + \"ms\"] = responseTime;",
                  "",
                  "tests[\"Response time is less than 500ms\"] = responseTime < 500;",
                  "",
                  "console.log(\"Response time in ms: \" + responseTime);",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": " {\n  \"assignment\":{\n    \"assignmentTitle\":\"{{assignmentTitle}}\",\n    \"dueDate\":{{dueDate}},\n    \"elsAssignmentGuid\":\"{{assignmentGuid}}\",\n    \"elsCourseId\":{{eolsCourseId1}},\n    \"elsUserId\":{{eolsStudentUserId1}},\n    \"lmsAssignmentGuid\":\"N/A\",\n    \"lmsCourseId\":\"{{lmsCourseId}}\",\n    \"pointsPossible\":{{pointsPossible}}\n  },\n  \"lmsClientId\":\"canvas.qa\",\n  \"lmsCourseId\":\"{{lmsCourseId}}\",\n  \"lmsUserId\":\"{{lmsUserId}}\",\n  \"elsCourseId\":{{eolsCourseId1}},\n  \"elsUserId\":{{eolsStudentUserId1}},\n  \"score\":0.38,\n  \"scoreType\":\"BEST\"\n}"
            },
            "url": "{{url}}/v1/outcomes"
          },
          "response": []
        }
      ]
    }
  ]
}